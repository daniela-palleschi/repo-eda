[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Reproducible analysis reports with eye-tracking reading time data",
    "section": "",
    "text": "Course Intro\nWelcome to the website for the course “Reproducible analysis reports with eye-tracking reading time data” for the Summer Semester 2023. Some quick info about the course:\nMost documents are available as slides, html, and PDF on Moodle. Choose whichever you prefer (I suggest html).\nSave your session info at the end of each document. Our results very often depend on the version of R/RStudio/a package we used. This is a great first step towards creating a reproducible workflow!\nR version 4.3.0 (2023-04-21)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.2 compiler_4.3.0    fastmap_1.1.1     cli_3.6.1        \n [5] htmltools_0.5.5   tools_4.3.0       rstudioapi_0.15.0 yaml_2.3.7       \n [9] rmarkdown_2.23    knitr_1.43        jsonlite_1.8.7    xfun_0.39        \n[13] digest_0.6.33     rlang_1.1.1       renv_0.17.3       evaluate_0.21"
  },
  {
    "objectID": "index.html#course-description",
    "href": "index.html#course-description",
    "title": "Reproducible analysis reports with eye-tracking reading time data",
    "section": "Course description",
    "text": "Course description\n\ndevelop skills and know-how\n\ncreate reproducible reports & presentations of eye-tracking reading data\ncommon measures in eye-tracking reading\nimportance of reproducible workflow\ncommunicate findings\n\nhands-on exercises in RStudio with the R programming language\n\ndata wrangling (tidyverse)\ndata visualisation (ggplot2),\ndescriptive and inferential statistics (lme4 and lmerTest)"
  },
  {
    "objectID": "index.html#course-credits",
    "href": "index.html#course-credits",
    "title": "Reproducible analysis reports with eye-tracking reading time data",
    "section": "Course credits",
    "text": "Course credits\n\n4 LP\n\nattendance and participation: 1LP\nIn-class exercises and preparation: 1LP\nAssignments: 2 LP\n\nReproducible (pilot) analysis report + Pre-registration\nReproducible analysis report"
  },
  {
    "objectID": "index.html#further-readings",
    "href": "index.html#further-readings",
    "title": "Reproducible analysis reports with eye-tracking reading time data",
    "section": "Further readings",
    "text": "Further readings\n\nthere are lots of useful resources out there, specifically:\n\nBodo Winter’s tutorials on linear (mixed) models (winter_linear_2013?; winter_very_2014?)\nthe PsyTeachR website is a great resource for hands-on stats and/or data analysis in R from the University of Glasgow School of Psychology and Neuroscience"
  },
  {
    "objectID": "background.html",
    "href": "background.html",
    "title": "Background",
    "section": "",
    "text": "This section provides the conceptual information relevant to reproducible analysis with eye-tracking during reading data. We first learn what reproducibility is in terms of research and data analysis, and why it’s important. We’ll then get a short overview of eye-tracking during reading, and then an introduction into our first dataset. Note that the data is only available on the Course Moodle for the time being."
  },
  {
    "objectID": "reproducibility.html",
    "href": "reproducibility.html",
    "title": "1  Reproducible Analayses",
    "section": "",
    "text": "References"
  },
  {
    "objectID": "reproducibility.html#replication",
    "href": "reproducibility.html#replication",
    "title": "1  Reproducible Analayses",
    "section": "1.1 Replication",
    "text": "1.1 Replication\n\n“There is increasing concern that in modern research, false findings may be the majority or even the vast majority of published research claims”\n– Ioannidis (2005)\n\n\nreplication refers to re-running a previous experiment with as few differences as possible\n\naim: determine whether the original results were robust and are replicable\nif yes, great! the original findings are reliable\nif no, hmm, maybe the original findings were false positives? or due to some other factor?\n\nin recent years, researchers have tried to replicate classic studies in their field\n\nbut in many cases, they did not get the same effects the original study reported (and were famous for)\n\nthis began the replication crisis\n\n\n1.1.1 An example from language research\n\nNieuwland et al. (2018): a direct EEG1 replication (versus conceptual replication)\n\n\n\na multi-lab replication of DeLong et al. (2005)’s impactful paper\n\nDeLong et al. (2005): reported N400 effects elicted at unexpected nouns, but also on preceding determiners (English a/an) when it signalled an unexpected word,\n\ne.g., The day was breezy so the boy went outside to fly…a kite/*an airplane\ntaken as evidence of pre-activation of phonological form, graded by cloze probability\n\nNieuwland et al. (2018): replicated N400 at noun, but not at adjective\n\ni.e., failure to replicate a famous finding"
  },
  {
    "objectID": "reproducibility.html#reproducibility",
    "href": "reproducibility.html#reproducibility",
    "title": "1  Reproducible Analayses",
    "section": "1.2 Reproducibility",
    "text": "1.2 Reproducibility\n\nreproducibility refers to the ability to reproduce somebody’s analyses with their\n\ndata\nand code\n\nit is not something we do once, nor is it something that will get us published\n\nbut it’s important for open science and encourages transparency\n\n\n\n1.2.1 Replication vs. Reproducibility\n\nreplication of a study\n\nrepeating an experiment\ngetting similar results\n\nreproducibility of analyses\n\nrepeating analyses of the same data\ngetting the same results\n\ne.g., when you submit a paper to a journal, they make ask for your data and code so reviewers can reproduce your analyses\n\nrequires data and code\n\nif you have interesting findings, other researchers (or future you) may want to replicate your study to see if they can replicate your findings\n\n(may require) stimuli, set-up and presentation information, participant demographics"
  },
  {
    "objectID": "reproducibility.html#open-science-why-should-i-care",
    "href": "reproducibility.html#open-science-why-should-i-care",
    "title": "1  Reproducible Analayses",
    "section": "1.3 Open Science: Why should I care?",
    "text": "1.3 Open Science: Why should I care?\n\nScience is cumulative\n\nWe should ensure we’re building on reliable, robust findings\ni.e., it’s good scientific practice\n\nBecause the field cares\n\nreplication/reproducibility are beginning to be foregrounded by e.g., journals/job advertisements\n\nHelps future you\n\npre-registration, reproducible analyses, clean and shareable data: all help future you\n\n\n\n1.3.1 What can I do?\n\nthere’s a variety of open science practices that we can choose to implement\nsome suggestions from Kathawalla et al. (2021):\n\n\n\nLevel: Easy\n\nJournal Club\nProject workflow\nPre-prints\n\n\nLevel: Medium\n\nReproducible code\nSharing data\nTransparent manuscripts\nPre-registration\n\n\nLevel: Difficult\n\nRegistered reports\n\n\n\n\n\n1.3.2 How to do better science\n\ndon’t be afraid of making mistakes\n\n(most) researchers aren’t statisticians or programmers\ndo the best you can, and be transparent\n\ndoing some of the steps is better than doing none\n\n\n\n1.3.3 What will we learn here?\n\n\nDesign and Reporting\n\n\nPreregistration/Registered Reports\nTransparent writing\n\n\nAnalysis\n\n\nReproducible code\n\nwith open source software (R, RStudio, packages)\ndynamic reports with Quarto/Rmarkdown\n\nProject workflow\n\nfolder structure\n\nhow to sensibly set up your folders\n\ncontained environments\n\nusing RProjects and the here package\n\n\n\n\n\n\n\n\n\n\nImage source: Kathawalla et al. (2021) (all rights reserved)"
  },
  {
    "objectID": "reproducibility.html#r-is-for-reproducibility",
    "href": "reproducibility.html#r-is-for-reproducibility",
    "title": "1  Reproducible Analayses",
    "section": "1.4 R is for Reproducibility",
    "text": "1.4 R is for Reproducibility\n\nwe will be working with R, RStudio, Quarto, and RProjects\n\nR: a programming language for statistical computing and graphics\nRStudio: an integrated development environment (IDE)\n\nRStudio Desktop\nRStudio Server\n\nQuarto (similar to Rmarkdown): dynamic reports\n\ncombining text, code, and printed tables and figures\n\nRProjects: a workflow tool\n\ncontains all files necessary for a project\nworks with relative file paths"
  },
  {
    "objectID": "reproducibility.html#exercises",
    "href": "reproducibility.html#exercises",
    "title": "1  Reproducible Analayses",
    "section": "1.5 Exercises",
    "text": "1.5 Exercises\n\n1.5.1 RStudio\n\nOpen RStudio\n\nlocate the Environment, Files, and Console panes\nFile &gt; New File &gt; R script\nwrite [your birth-month number]*[the your birth day] and hit Enter\nwrite print(\"Hello World!\")\nwrite number &lt;- 3*32; this will create an object/variable ‘number’\nwrite string &lt;- \"Hello World!\"; this will create an object/variable ‘string’\nwrite number\nwrite string\nadd comments describing each step using #\nFile &gt; Save As"
  },
  {
    "objectID": "reproducibility.html#section",
    "href": "reproducibility.html#section",
    "title": "1  Reproducible Analayses",
    "section": "",
    "text": "# multiply 5 by 7\n5*7\n\n[1] 35\n\n\n\n# print some text\nprint(\"Hello World!\")\n\n[1] \"Hello World!\"\n\n\n\n# save an object 'number' with 5*7\nnumber &lt;- 5*7\n\n\n# save an object 'string' with text\nstring &lt;- \"Hello World!\"\n\n\n# print number\nnumber\n\n[1] 35\n\n\n\n# print string\nstring\n\n[1] \"Hello World!\"\n\n\n\n# do math with objects\nnumber+number\n\n[1] 70\n\n\n\nnumber*number\n\n[1] 1225\n\n\n\nnumber*2\n\n[1] 70\n\n\n\nmonth &lt;- 5\n\n\nday &lt;- 7\n\n\nmonth*day\n\n[1] 35\n\n\n\n1.5.2 Quarto2\n\nR scripts are a great way to keep track of what you did\n\nhowever, the output is not saved, and adding comments with # gets kind of chunky\nenter: dynamic reports!\n\ndynamic reports are those that combine text, code, and output\n\nthey are a great tool for communicating, collaborating, and documenting\nthey are also fantastic for note-taking\n\nRmarkdown vs. Quarto\n\nboth can combine text with code, outputting PDFs, Word Documents, html, or slides\nmain difference: Quarto has native support of a wider range of programming languages (e.g., Python and Julia)\n\nWant to know more? Check out Hadley Wickham’s intro (Wickham et al., n.d.)\n\n\n1.5.2.1 YAML\n\n---\ntitle: \"My title\"\nauthor: \"My name\"\nformat: html\n---\n\n\nYAML is a human-readable programming language used to configure documents\nformatting is important: but be sandwiched between --- and ---\nin Quarto the output type must at least be given (with R: pdf, html, revealjs)\n\n\n\n1.5.2.2 Headings and text\n\n# This is a heading\n\nThis is text.\n\n## This is a sub-heading\n\nThis is more text.\n\n\nheadings are indicated by #\n\nthe number of #’s indicates the heading level\n\n\n\n\n1.5.2.3 Code snippets\n# do some math\nyear &lt;- 1989\ndog &lt;- \"Lola\"\n\nsandwiched between markdown```{r} and `markdown\n\nshortcut: Ctrl/Cmd+Alt+I\n\n\n\n\n1.5.2.4 In-line code\n\nI was born on `r month`/`r day`/`r year`. My dog's name is `r dog`.\n\nI was born on 5/7/1989. My dog’s name is Lola.\n\ncode output that was run above text can be called in-line using `r `\n\n\n\n1.5.2.5 Altogether\n---\ntitle: \"My title\"\nauthor: \"My name\"\nformat: html\n---\n\n# This is a heading\n\nThis is text.\n\n## This is a sub-heading\n\nThis is more text.\n\nAdd some code chunks.\n\n```{r}\n# do some math\nyear &lt;- 1989\ndog &lt;- \"Lola\"\n```\n\nAnd use call objects for in-line code: I was born on `r month`/`r day`/`r year`. My dog's name is `r dog`.\n\n\n\n1.5.3 Quarto Exercises\n\n\n\nCreate a new Quarto document\n\nFile &gt; New File &gt; Quarto Document\nRead the instructions\nPractice running the chunks individually\nrender the document\nverify that you can modify the code, re-run it, and see modified output\n\n\n\n\nCreate one new Quarto document for each of the three built-in formats: HTML, PDF and Word.\n\nRender each of the three documents\nHow do the outputs differ?\nHow do the inputs differ?3\n\n\n\n\n\n\n1.5.4 Quarto cont’d\n\nChoose a Quarto document:\n\ngive it a title, your name (author), and unclick ‘Use visual markdown editor’\n\nRender\nYAML:\n\n\ntitle: \"Eye-tracking during reading\"\nsubtitle: \"Lecture 2 notes\"\nauthor: \"[YOUR NAME HERE]\"\nlang: en\ndate: `r Sys.Date()`\n\n\nRender\nyou can now try writing your class notes in this document (if you’re brave)"
  },
  {
    "objectID": "reproducibility.html#footnotes",
    "href": "reproducibility.html#footnotes",
    "title": "1  Reproducible Analayses",
    "section": "",
    "text": "electroencephalography↩︎\nhttps://r4ds.hadley.nz/quarto.html#workflow↩︎\nYou may need to install LaTeX in order to build the PDF output — RStudio will prompt you if this is necessary.↩︎"
  },
  {
    "objectID": "et_reading.html",
    "href": "et_reading.html",
    "title": "2  Eye-tracking during reading",
    "section": "",
    "text": "3 Eye-tracking"
  },
  {
    "objectID": "et_reading.html#eye-movements",
    "href": "et_reading.html#eye-movements",
    "title": "2  Eye-tracking during reading",
    "section": "3.1 Eye movements",
    "text": "3.1 Eye movements\n\nsaccades: eye movements (e.g., from one word to another)\n\naverage saccade legnth: 7-9 letters (in alphabetic writing systems)\n\nfixations: ‘looking at’ something, e.g., a word (little movement)\n\nwhen information is taken in\naverage duration: 225-250ms (ranging 50-600ms)\n\nregressions: saccades to earlier text\n\noccurance: 10-15% of saccades in skilled readers\n\n\n\n(rayner_eye_2009-1?)"
  },
  {
    "objectID": "et_reading.html#the-eye-tracker",
    "href": "et_reading.html#the-eye-tracker",
    "title": "2  Eye-tracking during reading",
    "section": "3.2 The eye-tracker",
    "text": "3.2 The eye-tracker\n\n\n\neye-tracker\n\ncamera \\(+\\) infrared illuminator\n\nscreen\nchin/head rest\nin our lab: desk-mounted\n\n\n\n\n\n\n\nImage source: SR Research (all rights reserved)"
  },
  {
    "objectID": "et_reading.html#eye-tracking-reading-measures",
    "href": "et_reading.html#eye-tracking-reading-measures",
    "title": "2  Eye-tracking during reading",
    "section": "4.1 Eye-tracking reading measures",
    "text": "4.1 Eye-tracking reading measures\n\ninform theories of language processing via linking hypotheses\n\nlinking visual attention to processing\n\ntypically, we compare reading times as a function of some manipulation\n\ne.g., Sally went/goed to the store.\n\nlonger reading times are taken to reflect processing costs, associated with e.g., sentence complexity or anomalies"
  },
  {
    "objectID": "et_reading.html#region-of-interest-roi",
    "href": "et_reading.html#region-of-interest-roi",
    "title": "2  Eye-tracking during reading",
    "section": "4.2 Region of interest (ROI)",
    "text": "4.2 Region of interest (ROI)\n\ncan be anything on-screen\n\nsentence-level\nword/region-level\na certain part of the screen\n\n\n\n\n\n\nVideo"
  },
  {
    "objectID": "et_reading.html#measures-dependent-variables",
    "href": "et_reading.html#measures-dependent-variables",
    "title": "2  Eye-tracking during reading",
    "section": "4.3 Measures (dependent variables)",
    "text": "4.3 Measures (dependent variables)\n\nwhat we measure = dependent variables (usually…)\n\ntheir value depends on some predictor (e.g., word frequency)\n\n\n\n\n\nmeasures of duration (time spent on a region)\n\nfirst fixation\nfirst-pass reading time\nregression path duration\ntotal reading time\n\ndata type: continuous\n\n\n\nmeasures of revisits\n\nnumber of fixations\nnumber of regressions in/out\nregression in/out (yes or no)\nprobability of regressions in/out (0:1)\n\ndata type: binary (0,1) or count"
  },
  {
    "objectID": "et_reading.html#independent-variables",
    "href": "et_reading.html#independent-variables",
    "title": "2  Eye-tracking during reading",
    "section": "4.4 Independent variables",
    "text": "4.4 Independent variables\n\nwhat can influence reading measures? (juhasz_lexical_2011?; rayner_linguistic_2011?; warren_influence_2011?; clifton_syntactic_2011?)\n\nsome examples:\n\n\n\n\n\nWord properties\n\nword frequency\nword length\n\n\n\n\nSentence-level influences\n\ncontext (i.e., prediction)\nsemantic or grammatical manipulations\n\n\n\n\nInter- and intra-individual\n\ndomain-specific expertise\nreading skill level"
  },
  {
    "objectID": "et_reading.html#what-do-these-measures-tell-us",
    "href": "et_reading.html#what-do-these-measures-tell-us",
    "title": "2  Eye-tracking during reading",
    "section": "4.5 What do these measures tell us?",
    "text": "4.5 What do these measures tell us?\n\neye-tracking during reading can tell use when and where processing costs are incurred\nearly measures involve “first contact with a word” or region: first-fixation, first-pass reading time (vasishth_what_2013?)\nlate measures involve regressions to a region: e.g., total reading time\n\nmay also include ‘spillover’ effects from early processing\n\neye-tracking during reading measures can therefore tell us about stages of processing"
  },
  {
    "objectID": "et_dataset.html",
    "href": "et_dataset.html",
    "title": "3  Working with eye-tracking reading data in R",
    "section": "",
    "text": "Set-up\nlibrary(here) # relative path\nlibrary(tidyverse) # tidy/transform\nlibrary(beepr) # beeps when code runs or fails\nlibrary(rbbt) # zotero plugin\nbeep code\n## play sound if error encountered\n### from: https://sejohnston.com/2015/02/24/make-r-beep-when-r-markdown-finishes-or-when-it-fails/\noptions(error = function(){    # Beep on error\n  beepr::beep(sound = \"wilhelm\")\n  Sys.sleep(2) # \n  }\n )\n## and when knitting is complete\n.Last &lt;- function() {          # Beep on exiting session\n  beepr::beep(sound = \"ping\")\n  Sys.sleep(6) # allow to play for 6 seconds\n  }\nrbbt code\n# Create references.json file based on the citations in this script:\n# 1. make sure you have 'bibliography: references/references.json' in the YAML\n# 2. create a new folder called 'references'\n# 3. run:\nrbbt::bbt_update_bib(\"_et_dataset.qmd\")\n\n\nError: '_et_dataset.qmd' does not exist in current working directory ('/Users/danielapalleschi/Documents/Personal/repo-eda').\nShow Session Info\nsessionInfo()\n\n\nR version 4.3.0 (2023-04-21)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] rbbt_0.0.0.9000 beepr_1.3       lubridate_1.9.2 forcats_1.0.0  \n [5] stringr_1.5.0   dplyr_1.1.2     purrr_1.0.1     readr_2.1.4    \n [9] tidyr_1.3.0     tibble_3.2.1    ggplot2_3.4.2   tidyverse_2.0.0\n[13] here_1.0.1     \n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.3        generics_0.1.3    renv_0.17.3       stringi_1.7.12   \n [5] hms_1.1.3         digest_0.6.33     magrittr_2.0.3    evaluate_0.21    \n [9] grid_4.3.0        timechange_0.2.0  fastmap_1.1.1     rprojroot_2.0.3  \n[13] jsonlite_1.8.7    audio_0.1-10      fansi_1.0.4       scales_1.2.1     \n[17] cli_3.6.1         rlang_1.1.1       crayon_1.5.2      bit64_4.0.5      \n[21] munsell_0.5.0     withr_2.5.0       yaml_2.3.7        tools_4.3.0      \n[25] parallel_4.3.0    tzdb_0.4.0        colorspace_2.1-0  vctrs_0.6.3      \n[29] R6_2.5.1          lifecycle_1.0.3   htmlwidgets_1.6.2 bit_4.0.5        \n[33] vroom_1.6.3       pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.3     \n[37] glue_1.6.2        xfun_0.39         tidyselect_1.2.0  rstudioapi_0.15.0\n[41] knitr_1.43        htmltools_0.5.5   rmarkdown_2.23    compiler_4.3.0"
  },
  {
    "objectID": "et_dataset.html#our-first-dataset",
    "href": "et_dataset.html#our-first-dataset",
    "title": "3  Working with eye-tracking reading data in R",
    "section": "4.1 Our first dataset",
    "text": "4.1 Our first dataset\n\n\n\nreferent-lifetime context\n\ndead/alive\n\ncritical sentence\n\nPresent Perfect/Simple Future\n\nbinary naturalness judgement to end trial\n\naccept/reject\n\n\n\n\n\nVideo"
  },
  {
    "objectID": "et_dataset.html#design-description",
    "href": "et_dataset.html#design-description",
    "title": "3  Working with eye-tracking reading data in R",
    "section": "4.2 Design description",
    "text": "4.2 Design description\n\n\n\n2x2 mixed design\n\ntwo 2-level factors (2x2 = 2-level x 2-level)\n\nfactor 1: lifetime (levels: dead, alive)\nfactor 2: tense (levels: PP, SF)\n\n\n\n\n\n\n\n\nalive\ndead\n\n\n\n\nPP\nEddie Redmayne…has won\nGene Kelly…*has won\n\n\nSF\nEddie Redmayne…will win\nGene Kelly…*will win\n\n\n\n\n\n\n\n\npredictors/independent variables\n\nlifetime\ntense\n\n\n\n\nmeasure/dependent variables (verb region)\n\nfirst-fixation time (milliseconds)\nfirst-pass reading time (ms)\nregression path duration (ms)\ntotal reading time (ms)\n\n\n\n\n\n4.2.1 Repeated measures design\n\nobservations are repeated e.g., multiple data points per participant, and per item across participants\n\nessentially, data are not independent\ne.g., each participant will have their own reading speed, some items might be systematically less acceptable for some unforeseen reason, etc."
  },
  {
    "objectID": "et_dataset.html#install-packages",
    "href": "et_dataset.html#install-packages",
    "title": "3  Working with eye-tracking reading data in R",
    "section": "5.1 Install packages",
    "text": "5.1 Install packages\n\ninstall.packages(\"tidyverse\")\ninstall.packages(\"here\")\n\n\ninstall\n\nonly do once\n…or when you working on a new computer\n…or after updating R\n\nmight be a wise idea to create a script just for installing packages\n\ncan save time/energy when updating R"
  },
  {
    "objectID": "et_dataset.html#load-packages",
    "href": "et_dataset.html#load-packages",
    "title": "3  Working with eye-tracking reading data in R",
    "section": "5.2 Load packages",
    "text": "5.2 Load packages\n\nlibrary(tidyverse)\nlibrary(here)\n\n\nload packages\n\nneeded at the start of each session"
  },
  {
    "objectID": "et_dataset.html#load-dataset",
    "href": "et_dataset.html#load-dataset",
    "title": "3  Working with eye-tracking reading data in R",
    "section": "5.3 Load dataset",
    "text": "5.3 Load dataset\n\ndf_lifetime &lt;- readr::read_csv(here::here(\"data/data_lifetime_pilot.csv\"))\n\n\nN.B., readr::read_csv can be read as “read_csv() function in the readr package”\n\ni.e., package::function()\nyou only need to use this syntax if you haven’t loaded the specific package yet (maybe because you only need it once), or if a function name is included in multiple packages (i.e., there’s a discrepancy in what read_csv could be referring to)\nwhy did I use it here?"
  },
  {
    "objectID": "et_dataset.html#section",
    "href": "et_dataset.html#section",
    "title": "3  Working with eye-tracking reading data in R",
    "section": "5.4 ",
    "text": "5.4 \n\n\n\n\n\n\nhere package\n\n\n\n\n\nUsing the here package, we can access files relative to where our .RProj is stored.\nIn ‘olden times’, we had to specify the file path with something like:\n\n# load in data from an *absolute* file path\ndf_lifetime &lt;- read_csv(\"Users/yournamehere/Documents/SoSe2023/ET_reading/data/data_lifetime_pilot.csv\")\n\nOr, we’d set an absolute path as our working directory, to which all other file paths were relative\n\n# set *absolute* path as working directory\nsetwd(\"Users/username/Documents/SoSe2023/ET_reading\")\n\n# load in data *relative* to our wd\ndf_lifetime &lt;- read_csv(\"data/data_lifetime_pilot.csv\")\n\nThis meant that if I sent my project folder to somebody else, they wouldn’t be able to run my code because they would have to change the absolute file path to match their machine."
  },
  {
    "objectID": "et_dataset.html#inspect-dataset",
    "href": "et_dataset.html#inspect-dataset",
    "title": "3  Working with eye-tracking reading data in R",
    "section": "5.5 Inspect dataset",
    "text": "5.5 Inspect dataset\n\nthere are several different things you can inspect\n\nand different ways to accomplish those things\n\nthe first thing I usually do is look at the column/variable names\n\n\n5.5.1 names()\n\n\n\nthe names in all caps are variables created during the experiment\n\ni.e., they are our recorded data, mainly what we wanted to measure: dependent variables (DV)\nalso includes some information about the experiment set-up per participant\n\nthe other names are variables from my stimuli lists\n\ni.e., they mostly contain our independent variables (IV)/stimuli\n\nwe typically want to see what effect our IVs had on any given DVs\nvariable descriptions can be found on the Moodle: Data &gt; Documentation\n\n\n\n\nnames(df_lifetime)\n\n [1] \"RECORDING_SESSION_LABEL\"     \"TRIAL_INDEX\"                \n [3] \"EYE_USED\"                    \"IA_DWELL_TIME\"              \n [5] \"IA_FIRST_FIXATION_DURATION\"  \"IA_FIRST_RUN_DWELL_TIME\"    \n [7] \"IA_FIXATION_COUNT\"           \"IA_ID\"                      \n [9] \"IA_LABEL\"                    \"IA_REGRESSION_IN\"           \n[11] \"IA_REGRESSION_IN_COUNT\"      \"IA_REGRESSION_OUT\"          \n[13] \"IA_REGRESSION_OUT_COUNT\"     \"IA_REGRESSION_PATH_DURATION\"\n[15] \"KeyPress\"                    \"rt\"                         \n[17] \"bio\"                         \"critical\"                   \n[19] \"gender\"                      \"item_id\"                    \n[21] \"list\"                        \"match\"                      \n[23] \"condition\"                   \"name\"                       \n[25] \"name_vital_status\"           \"tense\"                      \n[27] \"type\"                        \"yes_press\"                  \n\n\n\n\n\n\n5.5.2 rename()\n\nthe dependent variable names are pretty clunky, let’s rename a few:\n\nRECORDING_SESSION_LABEL corresponds to a single participant\nTRIAL_INDEX logged the trial number\nEYE_USED logged which eye was tracked\n\n\n\n\nCode\ndf_lifetime &lt;- df_lifetime %&gt;%\n  rename(\"px\" = RECORDING_SESSION_LABEL,\n         \"trial\" = TRIAL_INDEX,\n         \"eye\" = EYE_USED)\n\n\n\n5.5.2.1 Naming variables\n\n\n\n\n\n\nNaming conventions\n\n\n\nIt’s wise to keep variable and object names concise but informative\n\nall lowercase means fewer key strokes overall\nseparate words with either periods or underscores, e.g., trial.index or trial_index\ne.g., we called our dataset df_lifetime because it is a dataframe (df) with data from our lifetime experiment\n\n\n\n\n\n\n5.5.3 Data structure\n\ndatasets typically contain a lot of rows and columns\n\nso we want to get a feel for how the data is structured\n\n\n\nwith base Rwith the tidyverse pipewith the native R pipe (Ctrl/Cmd+Shift+M)\n\n\n\nhead(df_lifetime)\n\n# A tibble: 6 × 28\n  px    trial eye   IA_DWELL_TIME IA_FIRST_FIXATION_DUR…¹ IA_FIRST_RUN_DWELL_T…²\n  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;                   &lt;dbl&gt;                  &lt;dbl&gt;\n1 px3       1 RIGHT             0                       0                      0\n2 px3       2 RIGHT             0                       0                      0\n3 px3       3 RIGHT             0                       0                      0\n4 px3       3 RIGHT             0                       0                      0\n5 px3       3 RIGHT             0                       0                      0\n6 px3       3 RIGHT             0                       0                      0\n# ℹ abbreviated names: ¹​IA_FIRST_FIXATION_DURATION, ²​IA_FIRST_RUN_DWELL_TIME\n# ℹ 22 more variables: IA_FIXATION_COUNT &lt;dbl&gt;, IA_ID &lt;dbl&gt;, IA_LABEL &lt;chr&gt;,\n#   IA_REGRESSION_IN &lt;dbl&gt;, IA_REGRESSION_IN_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_OUT &lt;dbl&gt;, IA_REGRESSION_OUT_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_PATH_DURATION &lt;dbl&gt;, KeyPress &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;,\n#   critical &lt;chr&gt;, gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;,\n#   condition &lt;chr&gt;, name &lt;chr&gt;, name_vital_status &lt;chr&gt;, tense &lt;chr&gt;, …\n\n\n\n\n\ndf_lifetime %&gt;%\n  head()\n\n# A tibble: 6 × 28\n  px    trial eye   IA_DWELL_TIME IA_FIRST_FIXATION_DUR…¹ IA_FIRST_RUN_DWELL_T…²\n  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;                   &lt;dbl&gt;                  &lt;dbl&gt;\n1 px3       1 RIGHT             0                       0                      0\n2 px3       2 RIGHT             0                       0                      0\n3 px3       3 RIGHT             0                       0                      0\n4 px3       3 RIGHT             0                       0                      0\n5 px3       3 RIGHT             0                       0                      0\n6 px3       3 RIGHT             0                       0                      0\n# ℹ abbreviated names: ¹​IA_FIRST_FIXATION_DURATION, ²​IA_FIRST_RUN_DWELL_TIME\n# ℹ 22 more variables: IA_FIXATION_COUNT &lt;dbl&gt;, IA_ID &lt;dbl&gt;, IA_LABEL &lt;chr&gt;,\n#   IA_REGRESSION_IN &lt;dbl&gt;, IA_REGRESSION_IN_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_OUT &lt;dbl&gt;, IA_REGRESSION_OUT_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_PATH_DURATION &lt;dbl&gt;, KeyPress &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;,\n#   critical &lt;chr&gt;, gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;,\n#   condition &lt;chr&gt;, name &lt;chr&gt;, name_vital_status &lt;chr&gt;, tense &lt;chr&gt;, …\n\n\n\n\n\ndf_lifetime |&gt; \n  head()\n\n# A tibble: 6 × 28\n  px    trial eye   IA_DWELL_TIME IA_FIRST_FIXATION_DUR…¹ IA_FIRST_RUN_DWELL_T…²\n  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;                   &lt;dbl&gt;                  &lt;dbl&gt;\n1 px3       1 RIGHT             0                       0                      0\n2 px3       2 RIGHT             0                       0                      0\n3 px3       3 RIGHT             0                       0                      0\n4 px3       3 RIGHT             0                       0                      0\n5 px3       3 RIGHT             0                       0                      0\n6 px3       3 RIGHT             0                       0                      0\n# ℹ abbreviated names: ¹​IA_FIRST_FIXATION_DURATION, ²​IA_FIRST_RUN_DWELL_TIME\n# ℹ 22 more variables: IA_FIXATION_COUNT &lt;dbl&gt;, IA_ID &lt;dbl&gt;, IA_LABEL &lt;chr&gt;,\n#   IA_REGRESSION_IN &lt;dbl&gt;, IA_REGRESSION_IN_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_OUT &lt;dbl&gt;, IA_REGRESSION_OUT_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_PATH_DURATION &lt;dbl&gt;, KeyPress &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;,\n#   critical &lt;chr&gt;, gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;,\n#   condition &lt;chr&gt;, name &lt;chr&gt;, name_vital_status &lt;chr&gt;, tense &lt;chr&gt;, …\n\n\n\n\n\n\n\n5.5.4 head() function\n\nprints the first 6 rows of your data\n\nyou can also specify the number of rows\n\n\n\n\nCode\ndf_lifetime %&gt;%\n  head(n = 2)\n\n\n# A tibble: 2 × 28\n  px    trial eye   IA_DWELL_TIME IA_FIRST_FIXATION_DUR…¹ IA_FIRST_RUN_DWELL_T…²\n  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;                   &lt;dbl&gt;                  &lt;dbl&gt;\n1 px3       1 RIGHT             0                       0                      0\n2 px3       2 RIGHT             0                       0                      0\n# ℹ abbreviated names: ¹​IA_FIRST_FIXATION_DURATION, ²​IA_FIRST_RUN_DWELL_TIME\n# ℹ 22 more variables: IA_FIXATION_COUNT &lt;dbl&gt;, IA_ID &lt;dbl&gt;, IA_LABEL &lt;chr&gt;,\n#   IA_REGRESSION_IN &lt;dbl&gt;, IA_REGRESSION_IN_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_OUT &lt;dbl&gt;, IA_REGRESSION_OUT_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_PATH_DURATION &lt;dbl&gt;, KeyPress &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;,\n#   critical &lt;chr&gt;, gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;,\n#   condition &lt;chr&gt;, name &lt;chr&gt;, name_vital_status &lt;chr&gt;, tense &lt;chr&gt;, …\n\n\n\n\nhead() function task\n\n\n\n\n\n\nExercise: head()\n\n\n\n\n\n\nprint only 2 rows using whichever syntax you prefer\nchange n = 2 to some other number and print\nrun ?head in the Console\n\nfind the opposite function (i.e., prints last rows) in the function description?\n\nrun this function with df_lifetime as argument; how many rows does it print as default?\nplay with n = in this function to print some other number of rows\n\n\n\n\n\n\n5.5.5 tail() function\n\nprints the last rows of a dataframe (or matrix, vector, table, or function)\n\n\ndf_lifetime %&gt;%\n  tail()\n\n# A tibble: 6 × 28\n  px    trial eye   IA_DWELL_TIME IA_FIRST_FIXATION_DUR…¹ IA_FIRST_RUN_DWELL_T…²\n  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;                   &lt;dbl&gt;                  &lt;dbl&gt;\n1 px4     207 LEFT            509                     218                    509\n2 px4     208 LEFT              0                       0                      0\n3 px4     208 LEFT            317                     167                    317\n4 px4     208 LEFT            162                     162                    162\n5 px4     208 LEFT            139                     139                    139\n6 px4     208 LEFT            280                     280                    280\n# ℹ abbreviated names: ¹​IA_FIRST_FIXATION_DURATION, ²​IA_FIRST_RUN_DWELL_TIME\n# ℹ 22 more variables: IA_FIXATION_COUNT &lt;dbl&gt;, IA_ID &lt;dbl&gt;, IA_LABEL &lt;chr&gt;,\n#   IA_REGRESSION_IN &lt;dbl&gt;, IA_REGRESSION_IN_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_OUT &lt;dbl&gt;, IA_REGRESSION_OUT_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_PATH_DURATION &lt;dbl&gt;, KeyPress &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;,\n#   critical &lt;chr&gt;, gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;,\n#   condition &lt;chr&gt;, name &lt;chr&gt;, name_vital_status &lt;chr&gt;, tense &lt;chr&gt;, …\n\n\n\n\n5.5.6 names()\n\nprints the column/variable names\n\n\ndf_lifetime %&gt;%\n  names()\n\n [1] \"px\"                          \"trial\"                      \n [3] \"eye\"                         \"IA_DWELL_TIME\"              \n [5] \"IA_FIRST_FIXATION_DURATION\"  \"IA_FIRST_RUN_DWELL_TIME\"    \n [7] \"IA_FIXATION_COUNT\"           \"IA_ID\"                      \n [9] \"IA_LABEL\"                    \"IA_REGRESSION_IN\"           \n[11] \"IA_REGRESSION_IN_COUNT\"      \"IA_REGRESSION_OUT\"          \n[13] \"IA_REGRESSION_OUT_COUNT\"     \"IA_REGRESSION_PATH_DURATION\"\n[15] \"KeyPress\"                    \"rt\"                         \n[17] \"bio\"                         \"critical\"                   \n[19] \"gender\"                      \"item_id\"                    \n[21] \"list\"                        \"match\"                      \n[23] \"condition\"                   \"name\"                       \n[25] \"name_vital_status\"           \"tense\"                      \n[27] \"type\"                        \"yes_press\"                  \n\n\n\n\n5.5.7 summary()\n\nprints a summary of each variable (column)\n\n\ndf_lifetime %&gt;%\n  summary()\n\n      px                trial           eye            IA_DWELL_TIME   \n Length:4431        Min.   :  1.0   Length:4431        Min.   :   0.0  \n Class :character   1st Qu.: 52.5   Class :character   1st Qu.:   0.0  \n Mode  :character   Median :104.0   Mode  :character   Median : 301.0  \n                    Mean   :105.0                      Mean   : 587.5  \n                    3rd Qu.:157.0                      3rd Qu.: 765.5  \n                    Max.   :208.0                      Max.   :8968.0  \n IA_FIRST_FIXATION_DURATION IA_FIRST_RUN_DWELL_TIME IA_FIXATION_COUNT\n Min.   :  0.0              Min.   :   0.0          Min.   : 0.000   \n 1st Qu.:  0.0              1st Qu.:   0.0          1st Qu.: 0.000   \n Median :161.0              Median : 245.0          Median : 2.000   \n Mean   :139.4              Mean   : 507.9          Mean   : 2.714   \n 3rd Qu.:202.5              3rd Qu.: 586.0          3rd Qu.: 4.000   \n Max.   :775.0              Max.   :8968.0          Max.   :35.000   \n     IA_ID         IA_LABEL         IA_REGRESSION_IN  IA_REGRESSION_IN_COUNT\n Min.   :1.000   Length:4431        Min.   :0.00000   Min.   :0.0000        \n 1st Qu.:1.000   Class :character   1st Qu.:0.00000   1st Qu.:0.0000        \n Median :2.000   Mode  :character   Median :0.00000   Median :0.0000        \n Mean   :2.681                      Mean   :0.09817   Mean   :0.1318        \n 3rd Qu.:4.000                      3rd Qu.:0.00000   3rd Qu.:0.0000        \n Max.   :6.000                      Max.   :1.00000   Max.   :5.0000        \n IA_REGRESSION_OUT IA_REGRESSION_OUT_COUNT IA_REGRESSION_PATH_DURATION\n Min.   :0.00000   Min.   :0.00000         Min.   :    0.0            \n 1st Qu.:0.00000   1st Qu.:0.00000         1st Qu.:    0.0            \n Median :0.00000   Median :0.00000         Median :  282.0            \n Mean   :0.08147   Mean   :0.09185         Mean   :  595.6            \n 3rd Qu.:0.00000   3rd Qu.:0.00000         3rd Qu.:  747.0            \n Max.   :1.00000   Max.   :7.00000         Max.   :10242.0            \n    KeyPress           rt            bio              critical        \n Min.   :4.000   Min.   :  533   Length:4431        Length:4431       \n 1st Qu.:4.000   1st Qu.: 1332   Class :character   Class :character  \n Median :4.000   Median : 1890   Mode  :character   Mode  :character  \n Mean   :4.496   Mean   : 2467                                        \n 3rd Qu.:5.000   3rd Qu.: 2910                                        \n Max.   :5.000   Max.   :15654                                        \n    gender             item_id            list          match          \n Length:4431        Min.   :  1.00   Min.   :14.00   Length:4431       \n Class :character   1st Qu.: 26.00   1st Qu.:15.00   Class :character  \n Mode  :character   Median : 51.00   Median :25.00   Mode  :character  \n                    Mean   : 64.16   Mean   :29.45                     \n                    3rd Qu.: 78.50   3rd Qu.:35.00                     \n                    Max.   :208.00   Max.   :45.00                     \n  condition             name           name_vital_status     tense          \n Length:4431        Length:4431        Length:4431        Length:4431       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n     type             yes_press    \n Length:4431        Min.   :4.000  \n Class :character   1st Qu.:4.000  \n Mode  :character   Median :4.000  \n                    Mean   :4.499  \n                    3rd Qu.:5.000  \n                    Max.   :5.000  \n\n\n\n\n5.5.8 Exercise\nTake some time to explore the dataset.\n\ndouble click on the dataset name in the Environment pane to view it like a spreadsheet\nlook at the names, can you figure out what they represent?"
  },
  {
    "objectID": "et_dataset.html#class-types",
    "href": "et_dataset.html#class-types",
    "title": "3  Working with eye-tracking reading data in R",
    "section": "5.6 class types",
    "text": "5.6 class types\n\nthere are difference classes of data that R can read\n\nthe function class() takes as its argument an object or number\n\n\n\ndf_lifetime$rt %&gt;%\n  class()\n\n[1] \"numeric\""
  },
  {
    "objectID": "et_dataset.html#section-1",
    "href": "et_dataset.html#section-1",
    "title": "3  Working with eye-tracking reading data in R",
    "section": "5.7 ",
    "text": "5.7 \n\n\n\n\n\n\nSelecting a column\n\n\n\n\n\n\n# with column index\ndf_lifetime[2] %&gt;% summary()\n\n     trial      \n Min.   :  1.0  \n 1st Qu.: 52.5  \n Median :104.0  \n Mean   :105.0  \n 3rd Qu.:157.0  \n Max.   :208.0  \n\n\n\n# with column name\ndf_lifetime[,\"trial\"] %&gt;% summary()\n\n     trial      \n Min.   :  1.0  \n 1st Qu.: 52.5  \n Median :104.0  \n Mean   :105.0  \n 3rd Qu.:157.0  \n Max.   :208.0  \n\n\n\n# with data$column_name\ndf_lifetime$trial %&gt;% summary()\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    1.0    52.5   104.0   105.0   157.0   208.0 \n\n\n\n# with the tidyverse: select()\ndf_lifetime %&gt;% \n  select(trial) %&gt;%\n  summary()\n\n     trial      \n Min.   :  1.0  \n 1st Qu.: 52.5  \n Median :104.0  \n Mean   :105.0  \n 3rd Qu.:157.0  \n Max.   :208.0  \n\n\n\n\n\n\n5.7.1 character class\n\ncontain strings: collection of characters (i.e., text)\nthere’s no grouping in character variables\n\neach value is considered ‘unique’ and assumed to not be repeated\n\nwe usually aren’t interested in character class variables\n\nunless e.g., we have unique values per row (e.g., if a participant gave a free-text answer)\nor perhaps we have stored some stimuli sentences\n\nalthough this would arguably be better as a ‘category’, since there should be multiple trials across participants that contain the same sentences\n\n\n\n\n\n5.7.2 numeric class\n\nvariables with numeric values, usually some variable we’d want to compute summaries on, e.g., means\nsometimes we don’t want numbers to be stored as numeric class, however\n\nthis is the case for our variables yes_press and KeyPress (with 4 or 5)\n\nthe same is true for our variable item_id, which ranges from 1:120\n\nthe numbers are just unique codes for our stimuli, the difference between item 1 and item 2 has nothing to do with the difference between the numbers 1 and 2\n\n\n\n\n5.7.3 factor class\n\nwe typically want grouping variables to be factor class\n\nfactors contain categorical data\nany number that could be replaced with some other label should be a factor\n\nregion of interest (ROI) = 1:7\n\nbut we want to know how many observations per region, the number is not informative\nROI could alternatively be coded as, e.g., “adverb”, “pronoun”, “verb”, “spillover”\n\n\n\n\nfactor class\n\nlet’s change df_lifetime$yes_press to factor\n\nusing the mutate() verb from dplyr\nand as_factor() from forcats\n\n\n\n# change yes_press to factor\ndf_lifetime %&gt;%\n  mutate(yes_press = as_factor(yes_press))\n\n# A tibble: 4,431 × 28\n   px    trial eye   IA_DWELL_TIME IA_FIRST_FIXATION_DU…¹ IA_FIRST_RUN_DWELL_T…²\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;                  &lt;dbl&gt;                  &lt;dbl&gt;\n 1 px3       1 RIGHT             0                      0                      0\n 2 px3       2 RIGHT             0                      0                      0\n 3 px3       3 RIGHT             0                      0                      0\n 4 px3       3 RIGHT             0                      0                      0\n 5 px3       3 RIGHT             0                      0                      0\n 6 px3       3 RIGHT             0                      0                      0\n 7 px3       3 RIGHT             0                      0                      0\n 8 px3       3 RIGHT             0                      0                      0\n 9 px3       4 RIGHT             0                      0                      0\n10 px3       5 RIGHT             0                      0                      0\n# ℹ 4,421 more rows\n# ℹ abbreviated names: ¹​IA_FIRST_FIXATION_DURATION, ²​IA_FIRST_RUN_DWELL_TIME\n# ℹ 22 more variables: IA_FIXATION_COUNT &lt;dbl&gt;, IA_ID &lt;dbl&gt;, IA_LABEL &lt;chr&gt;,\n#   IA_REGRESSION_IN &lt;dbl&gt;, IA_REGRESSION_IN_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_OUT &lt;dbl&gt;, IA_REGRESSION_OUT_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_PATH_DURATION &lt;dbl&gt;, KeyPress &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;,\n#   critical &lt;chr&gt;, gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;, …\n\n\n\n\n5.7.4 multiple arguments in a verb\n\nwe can also change multiple columns at once:\n\n\n# change ROI & label to factor\ndf_lifetime %&gt;%\n  mutate(KeyPress = as_factor(KeyPress),\n         item_id = as_factor(item_id))\n\n# A tibble: 4,431 × 28\n   px    trial eye   IA_DWELL_TIME IA_FIRST_FIXATION_DU…¹ IA_FIRST_RUN_DWELL_T…²\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;                  &lt;dbl&gt;                  &lt;dbl&gt;\n 1 px3       1 RIGHT             0                      0                      0\n 2 px3       2 RIGHT             0                      0                      0\n 3 px3       3 RIGHT             0                      0                      0\n 4 px3       3 RIGHT             0                      0                      0\n 5 px3       3 RIGHT             0                      0                      0\n 6 px3       3 RIGHT             0                      0                      0\n 7 px3       3 RIGHT             0                      0                      0\n 8 px3       3 RIGHT             0                      0                      0\n 9 px3       4 RIGHT             0                      0                      0\n10 px3       5 RIGHT             0                      0                      0\n# ℹ 4,421 more rows\n# ℹ abbreviated names: ¹​IA_FIRST_FIXATION_DURATION, ²​IA_FIRST_RUN_DWELL_TIME\n# ℹ 22 more variables: IA_FIXATION_COUNT &lt;dbl&gt;, IA_ID &lt;dbl&gt;, IA_LABEL &lt;chr&gt;,\n#   IA_REGRESSION_IN &lt;dbl&gt;, IA_REGRESSION_IN_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_OUT &lt;dbl&gt;, IA_REGRESSION_OUT_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_PATH_DURATION &lt;dbl&gt;, KeyPress &lt;fct&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;,\n#   critical &lt;chr&gt;, gender &lt;chr&gt;, item_id &lt;fct&gt;, list &lt;dbl&gt;, match &lt;chr&gt;, …\n\n\n\n\n5.7.5 Pop quiz\n\nWhich class should the following variables be (numeric, factor, or character)?:\n\nparticipant ID\ntrial number\nfirst-pass reading time\nregression path duration\nregressions in\ncontext sentence\nlifetime\ntense\ncelebrity name\n\nchange them to these class types, and print a summary\nsave and render the document"
  },
  {
    "objectID": "et_dataset.html#plot-the-data",
    "href": "et_dataset.html#plot-the-data",
    "title": "3  Working with eye-tracking reading data in R",
    "section": "5.8 Plot the data",
    "text": "5.8 Plot the data\n\n\nat this stage we want to explore the data\n\ndistribution\n\npeaks, spread\n\nboundaries\n\n\n\n\n\nHistogram\n\nhist(df_lifetime$IA_FIRST_RUN_DWELL_TIME)\n\n\n\n\n\nBoxplot\n\nboxplot(df_lifetime$IA_FIRST_RUN_DWELL_TIME)\n\n\n\n\n\nScatterplot\n\nplot(df_lifetime$IA_FIRST_RUN_DWELL_TIME)\n\n\n\n\n\n\n\n5.8.1 Plotting two variables\nScatterplot\n\nplot(df_lifetime$IA_FIRST_FIXATION_DURATION, df_lifetime$IA_FIRST_RUN_DWELL_TIME)\n\n\n\n\n\n\n5.8.2 Exercise\nIn your Quarto document:\n\ncreate a heading ‘Data exploration’\n\n\nbriefly describe the data\n\n\nFor each of our depenent variables:\n\n\ncreate a subheading\ncalculate the mean and standard deviation of the variable (mean(), sd()) + create a boxplot of the variable\n\n\nRender the document often to make sure it runs\nUpload the source file (day1-nachname_vorname.qmd) to Moodle\ndownload the source file below yours in the list to the same folder, and try to run it\n\n\ndoes it run?\n\n\n\n5.8.3 \n\n\n\n\n\n\nprint options\n\n\n\n\neach code chunk can have different print options:\n\neval = FALSE: do not evaluate this chunk\ninclude = FALSE evaluate this chunk but don’t show it or its results\necho = FALSE print this chunk code\nmessage = FALSE/warning = false don’t print warnings or messages\nerror = TRUE continue rendering document even if there’s an error\n\ndo not use error = TRUE for final versions! You want to make sure things work as they should\n\n\n\n```{r, eval = T, echo = T, results = \"asis\", warning}\ncode here\n```\nor\n```{r}\n#| eval: false\ncode here\n```"
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "Exploratory Data Analysis (EDA) refers to the initial exploration of our data. Important steps we will cover are Data Wrangling (tidying and transforming your data) and Data Visualisation."
  },
  {
    "objectID": "wrangling.html",
    "href": "wrangling.html",
    "title": "4  Data wrangling",
    "section": "",
    "text": "5 ‘wrangle’ defined\n/ˈraŋɡl/\nnoun\na dispute or argument, typically one that is long and complicated. “an insurance wrangle is holding up compensation payments”\nverb\nImage source: Wickham et al. (n.d.) (all rights reserved)\n# load tidyverse\nlibrary(tidyverse)\n# run this manually!\nwrite.csv(df_lifetime, here::here(\"data/tidy_data_lifetime_pilot.csv\"),row.names=FALSE)\nShow code\nsessionInfo()\n\n\nR version 4.3.0 (2023-04-21)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] lubridate_1.9.2 forcats_1.0.0   stringr_1.5.0   dplyr_1.1.2    \n [5] purrr_1.0.1     readr_2.1.4     tidyr_1.3.0     tibble_3.2.1   \n [9] ggplot2_3.4.2   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.3        generics_0.1.3    renv_0.17.3       stringi_1.7.12   \n [5] hms_1.1.3         digest_0.6.33     magrittr_2.0.3    evaluate_0.21    \n [9] grid_4.3.0        timechange_0.2.0  fastmap_1.1.1     rprojroot_2.0.3  \n[13] jsonlite_1.8.7    httr_1.4.6        fansi_1.0.4       scales_1.2.1     \n[17] cli_3.6.1         rlang_1.1.1       crayon_1.5.2      bit64_4.0.5      \n[21] munsell_0.5.0     withr_2.5.0       yaml_2.3.7        tools_4.3.0      \n[25] parallel_4.3.0    tzdb_0.4.0        colorspace_2.1-0  here_1.0.1       \n[29] curl_5.0.1        vctrs_0.6.3       R6_2.5.1          magick_2.7.4     \n[33] lifecycle_1.0.3   fs_1.6.2          htmlwidgets_1.6.2 bit_4.0.5        \n[37] vroom_1.6.3       rbbt_0.0.0.9000   pkgconfig_2.0.3   pillar_1.9.0     \n[41] gtable_0.3.3      Rcpp_1.0.11       glue_1.6.2        xfun_0.39        \n[45] tidyselect_1.2.0  rstudioapi_0.15.0 knitr_1.43        htmltools_0.5.5  \n[49] rmarkdown_2.23    compiler_4.3.0"
  },
  {
    "objectID": "wrangling.html#wrangler",
    "href": "wrangling.html#wrangler",
    "title": "4  Data wrangling",
    "section": "5.1 Wrangler",
    "text": "5.1 Wrangler\n\n\nJeep Wrangler \n\nWrangler Jeans \n\nCowboys"
  },
  {
    "objectID": "wrangling.html#why-tidy-data",
    "href": "wrangling.html#why-tidy-data",
    "title": "4  Data wrangling",
    "section": "6.1 Why tidy data?",
    "text": "6.1 Why tidy data?\n\nhelps future you\n\nand collaborators\n\nfacilitates sharing your data and code (Laurinavichyute et al., 2022)\nin short: facilitates reproducibility!"
  },
  {
    "objectID": "wrangling.html#what-does-tidy-data-look-like",
    "href": "wrangling.html#what-does-tidy-data-look-like",
    "title": "4  Data wrangling",
    "section": "6.2 What does tidy data look like?",
    "text": "6.2 What does tidy data look like?\nThree rules (Wickham et al., n.d.):\n\nEach variable is a column, each column is a variable\nEach observation is a row, each row is an observation\nEach value is a cell, each cell is a single value\n\n\n\n\n\n\nImage source: Wickham et al. (n.d.) (all rights reserved)\n\n\n\n\n\nN.B., how you define a variable or observation is relative to what you want to do\n\nfor now, let’s consider a single trial per participant as an observation"
  },
  {
    "objectID": "wrangling.html#section",
    "href": "wrangling.html#section",
    "title": "4  Data wrangling",
    "section": "",
    "text": "package versions\n\n\n\n\nyou can check the package version with:\n\n\npackageVersion(\"tidyverse\")\n\n[1] '2.0.0'\n\n\n\nneed to update?\n\n\n# update a single package\ninstall.packages(\"tidyverse\")\n\n\nwhat about your other packages?\n\n\n# which packages need updating?\nold.packages()\n# update all old packages\nupdate.packages()"
  },
  {
    "objectID": "wrangling.html#the-magritrr-pipe",
    "href": "wrangling.html#the-magritrr-pipe",
    "title": "4  Data wrangling",
    "section": "7.1 the magritrr pipe %>%",
    "text": "7.1 the magritrr pipe %&gt;%\n\n\ntakes the object before it and feeds it into the next command\n\nthe pipe could be read as “and then”\nN.B., there’s a new pipe in town! The R native |&gt; (Ctrl/Cmd+Shift+M)\n\n\n\n\n\n\n# take data frame and then...\niris %&gt;%\n  # print the head\n  head()\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\n\n\n\n\n\n\nImage source: magrittr documentation (all rights reserved)"
  },
  {
    "objectID": "wrangling.html#load-our-data",
    "href": "wrangling.html#load-our-data",
    "title": "4  Data wrangling",
    "section": "7.2 load our data",
    "text": "7.2 load our data\n\n# load lifetime data\nreadr::read_csv(here::here(\"data/data_lifetime_pilot.csv\")) \n\n# A tibble: 4,431 × 28\n   RECORDING_SESSION_LABEL TRIAL_INDEX EYE_USED IA_DWELL_TIME\n   &lt;chr&gt;                         &lt;dbl&gt; &lt;chr&gt;            &lt;dbl&gt;\n 1 px3                               1 RIGHT                0\n 2 px3                               2 RIGHT                0\n 3 px3                               3 RIGHT                0\n 4 px3                               3 RIGHT                0\n 5 px3                               3 RIGHT                0\n 6 px3                               3 RIGHT                0\n 7 px3                               3 RIGHT                0\n 8 px3                               3 RIGHT                0\n 9 px3                               4 RIGHT                0\n10 px3                               5 RIGHT                0\n# ℹ 4,421 more rows\n# ℹ 24 more variables: IA_FIRST_FIXATION_DURATION &lt;dbl&gt;,\n#   IA_FIRST_RUN_DWELL_TIME &lt;dbl&gt;, IA_FIXATION_COUNT &lt;dbl&gt;, IA_ID &lt;dbl&gt;,\n#   IA_LABEL &lt;chr&gt;, IA_REGRESSION_IN &lt;dbl&gt;, IA_REGRESSION_IN_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_OUT &lt;dbl&gt;, IA_REGRESSION_OUT_COUNT &lt;dbl&gt;,\n#   IA_REGRESSION_PATH_DURATION &lt;dbl&gt;, KeyPress &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;,\n#   critical &lt;chr&gt;, gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;, …\n\n\n\nwas anything added to the Environment pane (top right box in RStudio)?"
  },
  {
    "objectID": "wrangling.html#variable-assignment-with--",
    "href": "wrangling.html#variable-assignment-with--",
    "title": "4  Data wrangling",
    "section": "7.3 variable assignment with <-",
    "text": "7.3 variable assignment with &lt;-\n\nobject_name &lt;- code_output_to_be_saved_as_object_name\n\n\n# load lifetime data and store it under df_lifetime\ndf_lifetime &lt;- readr::read_csv(here::here(\"data/data_lifetime_pilot.csv\"), \n                               # for special characters\n                               locale = readr::locale(encoding = \"latin1\") \n                               ) \n\n\nyou should now see the object df_lifetime in the Environment pane"
  },
  {
    "objectID": "wrangling.html#section-1",
    "href": "wrangling.html#section-1",
    "title": "4  Data wrangling",
    "section": "",
    "text": "A note on annotation\n\n\n\n\nannotate as you go: provide useful comments to describe your code (# comment)\nyou always have at least one collaborator: future you!\n\ncomments\n\n\nFirst we load required libraries.\n\n# load libraries\nlibrary(tidyverse) # for e.g., wrangling and plotting\nlibrary(here) # for file-paths relative to project folder"
  },
  {
    "objectID": "wrangling.html#rename",
    "href": "wrangling.html#rename",
    "title": "4  Data wrangling",
    "section": "8.1 rename()",
    "text": "8.1 rename()\n\none of the first things you’ll often want to do is rename some variables\nlet’s start by re-naming some of our variables\n\ne.g., RECORDING_SESSION_LABEL is a long way of saying ‘participant’\n\n\n\n# rename variables\ndf_lifetime &lt;- df_lifetime %&gt;% # make df_lifetime from df_lifetime BUT THEN\n  rename(\"px\" = RECORDING_SESSION_LABEL, # rename a variable and (comma = 'and')\n         \"trial\" = TRIAL_INDEX) # another variable\n\n\n8.1.1 Exercise\nChange the following names:\n\n\nEYE_USED to eye\nIA_DWELL_TIME to tt\nIA_FIRST_FIXATION_DURATION to ff\nIA_FIXATION_COUNT to fix_count\nIA_FIRST_RUN_DWELL_TIME to fp\nIA_ID to region_n\nIA_LABEL to region_text\n\n\n\n\nIA_REGRESSION_IN to reg_in\nIA_REGRESSION_IN_COUNT to reg_in_count\nIA_REGRESSION_OUT to reg_out\nIA_REGRESSION_OUT_COUNT to reg_out_count\nIA_REGRESSION_PATH_DURATION to rpd\nname_vital_status to lifetime\n\n\n\n# the names should then look like this:\nnames(df_lifetime)\n\n [1] \"px\"            \"trial\"         \"eye\"           \"tt\"           \n [5] \"ff\"            \"fp\"            \"fix_count\"     \"region_n\"     \n [9] \"region_text\"   \"reg_in\"        \"reg_in_count\"  \"reg_out\"      \n[13] \"reg_out_count\" \"rpd\"           \"KeyPress\"      \"rt\"           \n[17] \"bio\"           \"critical\"      \"gender\"        \"item_id\"      \n[21] \"list\"          \"match\"         \"condition\"     \"name\"         \n[25] \"lifetime\"      \"tense\"         \"type\"          \"yes_press\""
  },
  {
    "objectID": "wrangling.html#relocate",
    "href": "wrangling.html#relocate",
    "title": "4  Data wrangling",
    "section": "8.2 relocate",
    "text": "8.2 relocate\n\nthe second step thing you might want to do is reorder your variables so the most important/relevant are near the beginning and ordered logically\n\nlet’s order our continuous reading time variables from ‘earliest’ to ‘latest’ measure\n\n\n\ndf_lifetime &lt;- df_lifetime %&gt;%\n  relocate(ff,fp,rpd,tt, .after=\"eye\") %&gt;% \n  relocate(region_n, region_text, .after=\"trial\")\n\n\nnames(df_lifetime[1:10])\n\n [1] \"px\"          \"trial\"       \"region_n\"    \"region_text\" \"eye\"        \n [6] \"ff\"          \"fp\"          \"rpd\"         \"tt\"          \"fix_count\""
  },
  {
    "objectID": "wrangling.html#mutate",
    "href": "wrangling.html#mutate",
    "title": "4  Data wrangling",
    "section": "8.3 mutate()",
    "text": "8.3 mutate()\nMake some change\n\nnew columns\n\n\ndf_lifetime &lt;- df_lifetime %&gt;%\n  mutate(new_column = \"new\")\n\n\nchange existing column\n\n\ndf_lifetime &lt;- df_lifetime %&gt;%\n  mutate(new_column = px,\n         trial = trial + 5)\n\n\nbut let’s undo that…\n\n\ndf_lifetime &lt;- df_lifetime %&gt;%\n  mutate(trial = trial - 5)\n\n\n8.3.1 if_else()\n\ncan be used inside mutate()\n\nchange values based on some logical condition\ncan be used to change an existing column, or create a new one\n\nifelse(condition, output_if_true, output_if_false)\n\n\ndf_lifetime &lt;- df_lifetime %&gt;%\n  mutate(new_column = if_else(name==\"Aaliyah\",\"name is Aaliyah\",\"name is not Aaliyah\"))\n\n\n\n8.3.2 case_when()\n\ncan be used inside mutate()\n\nchange values based on multiple logical conditions\ncan be used to change an existing column, or create a new one\n\ncase_when(condition & other_condition | other_condition ~ output, TRUE ~ output_otherwise)\n\nif you don’t include TRUE ~ output then NAs will created\n\n\n\ndf_lifetime &lt;- df_lifetime %&gt;%\n  mutate(newer_column = case_when(\n    name==\"Aaliyah\" & trial &gt; 104 ~ \"Aaliyah 2nd half\",\n    name==\"Beyoncé\" & (px == \"px01\" | px == \"px04\") ~ \"Beyoncé px04 or px06\",\n    TRUE ~ \"otherwise\"))\n\n\n\n8.3.3 Exercise\n\n\nCreate a new variable accept that checks whether the button pressed (KeyPress) equals the button that corresponds to an acceptance (yes_press)\n\nif KeyPress and yes_press are the same, accept should be 1. If not, accept should be 0\nhint: you will need if_else() or case_when()\n\n\n\n\n\nCreate a new variable accuracy where:\n\nif match is yes and accept is 1, accuracy is 1\nif match is no and accept is 0, accuracy is 1\nif match is yes and accept is 0, accuracy is 0\nif match is no and accept is 1, accuracy is 0\n\n\n\n\nthe means and summaries should look like this:\n\n\n\nmean(df_lifetime$accept)\n\n[1] 0.6068608\n\n\n\nsummary(as_factor(df_lifetime$accept))\n\n   0    1 \n1742 2689 \n\n\n\n\n\nmean(df_lifetime$accuracy)\n\n[1] 0.6267208\n\n\n\nsummary(as_factor(df_lifetime$accuracy))\n\n   0    1 \n1654 2777 \n\n\n\n\n\n8.3.4 Extra exercise\n\n\nCreate a new variable region, that has the following values based on region_n\n\n\nregion_n 1 is region verb-1\nregion_n 2 is region verb\nregion_n 3 is region verb+1\nregion_n 4 is region verb+2\nregion_n 5 is region verb+3\nregion_n 6 is region verb+4\n\n\nsummary(as_factor(df_lifetime$region))\n\nfiller verb-1   verb verb+1 verb+2 verb+3 verb+4 \n  1024    639    639    639    639    639    212 \n\n\n\n\n\nNow relocate our new variables so that:\n\n\nregion is before region_n\nKeyPress is after yes_press\n\n\nnames(df_lifetime)\n\n [1] \"px\"            \"trial\"         \"region\"        \"region_n\"     \n [5] \"region_text\"   \"eye\"           \"ff\"            \"fp\"           \n [9] \"rpd\"           \"tt\"            \"fix_count\"     \"reg_in\"       \n[13] \"reg_in_count\"  \"reg_out\"       \"reg_out_count\" \"rt\"           \n[17] \"bio\"           \"critical\"      \"gender\"        \"item_id\"      \n[21] \"list\"          \"match\"         \"condition\"     \"name\"         \n[25] \"lifetime\"      \"tense\"         \"type\"          \"yes_press\"    \n[29] \"KeyPress\"      \"new_column\"    \"newer_column\"  \"accept\"       \n[33] \"accuracy\""
  },
  {
    "objectID": "wrangling.html#group_by-and-ungroup",
    "href": "wrangling.html#group_by-and-ungroup",
    "title": "4  Data wrangling",
    "section": "8.4 group_by() and ungroup()",
    "text": "8.4 group_by() and ungroup()\nGroup data by certain variable(s)\n\nthen perform some mutation\nthen ungroup the data\n\n\ndf_lifetime &lt;- df_lifetime |&gt;\n  group_by(px) |&gt;\n  mutate(px_accuracy = mean(accuracy)) %&gt;%\n  ungroup()\n\n\nround(\n  range(df_lifetime$px_accuracy),\n  2)\n\n[1] 0.26 0.90"
  },
  {
    "objectID": "wrangling.html#select",
    "href": "wrangling.html#select",
    "title": "4  Data wrangling",
    "section": "8.5 select()",
    "text": "8.5 select()\n\nkeep only certain column(s)\n\n\n\ndf_lifetime %&gt;%\n  select(px)\n\n# A tibble: 4,431 × 1\n   px   \n   &lt;chr&gt;\n 1 px3  \n 2 px3  \n 3 px3  \n 4 px3  \n 5 px3  \n 6 px3  \n 7 px3  \n 8 px3  \n 9 px3  \n10 px3  \n# ℹ 4,421 more rows\n\n\n\n\n\ndf_lifetime %&gt;%\n  select(px, trial)\n\n# A tibble: 4,431 × 2\n   px    trial\n   &lt;chr&gt; &lt;dbl&gt;\n 1 px3       1\n 2 px3       2\n 3 px3       3\n 4 px3       3\n 5 px3       3\n 6 px3       3\n 7 px3       3\n 8 px3       3\n 9 px3       4\n10 px3       5\n# ℹ 4,421 more rows"
  },
  {
    "objectID": "wrangling.html#select-1",
    "href": "wrangling.html#select-1",
    "title": "4  Data wrangling",
    "section": "select()",
    "text": "select()\n\nor remove certain columns\n\n\ndf_lifetime %&gt;%\n  select(-px, -trial)\n\n# A tibble: 4,431 × 32\n   region region_n region_text    eye      ff    fp   rpd    tt fix_count reg_in\n   &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n 1 filler        1 He owned innu… RIGHT     0     0     0     0         0      0\n 2 filler        1 She is a moth… RIGHT     0     0     0     0         0      0\n 3 verb-1        1 She            RIGHT     0     0     0     0         0      0\n 4 verb          2 will perform   RIGHT     0     0     0     0         0      0\n 5 verb+1        3 in prestigiou… RIGHT     0     0     0     0         0      0\n 6 verb+2        4 in the future, RIGHT     0     0     0     0         0      0\n 7 verb+3        5 as reported i… RIGHT     0     0     0     0         0      0\n 8 verb+4        6 as reported i… RIGHT     0     0     0     0         0      0\n 9 filler        1 He interviewe… RIGHT     0     0     0     0         0      0\n10 verb-1        1 She            RIGHT     0     0     0     0         0      0\n# ℹ 4,421 more rows\n# ℹ 22 more variables: reg_in_count &lt;dbl&gt;, reg_out &lt;dbl&gt;, reg_out_count &lt;dbl&gt;,\n#   rt &lt;dbl&gt;, bio &lt;chr&gt;, critical &lt;chr&gt;, gender &lt;chr&gt;, item_id &lt;dbl&gt;,\n#   list &lt;dbl&gt;, match &lt;chr&gt;, condition &lt;chr&gt;, name &lt;chr&gt;, lifetime &lt;chr&gt;,\n#   tense &lt;chr&gt;, type &lt;chr&gt;, yes_press &lt;dbl&gt;, KeyPress &lt;dbl&gt;, new_column &lt;chr&gt;,\n#   newer_column &lt;chr&gt;, accept &lt;dbl&gt;, accuracy &lt;dbl&gt;, px_accuracy &lt;dbl&gt;"
  },
  {
    "objectID": "wrangling.html#section-2",
    "href": "wrangling.html#section-2",
    "title": "4  Data wrangling",
    "section": "",
    "text": "Select criteria\n\n\n\nYou can also use criteria for select:\n\nselect(starts_with(\"x\")) select columns that start with a character string\nselect(ends_with(\"x\")) select columns that end with a character string\nselect(contains(\"x\")) select columns that contain a character string\nselect(num_range(\"prefix\",10:20)) select columns with a prefix followed by a range of values\n\n\n\n\n8.5.1 Exercise\nRemove the example variables we created with mutate:\n\nnew_column and newer_column\n\n\n# should look like this after\nnames(df_lifetime)\n\n [1] \"px\"            \"trial\"         \"region\"        \"region_n\"     \n [5] \"region_text\"   \"eye\"           \"ff\"            \"fp\"           \n [9] \"rpd\"           \"tt\"            \"fix_count\"     \"reg_in\"       \n[13] \"reg_in_count\"  \"reg_out\"       \"reg_out_count\" \"rt\"           \n[17] \"bio\"           \"critical\"      \"gender\"        \"item_id\"      \n[21] \"list\"          \"match\"         \"condition\"     \"name\"         \n[25] \"lifetime\"      \"tense\"         \"type\"          \"yes_press\"    \n[29] \"KeyPress\"      \"accept\"        \"accuracy\"      \"px_accuracy\""
  },
  {
    "objectID": "wrangling.html#filter",
    "href": "wrangling.html#filter",
    "title": "4  Data wrangling",
    "section": "8.6 filter()",
    "text": "8.6 filter()\n\nselect certain rows based on certain criteria (==, !=, &gt;, &lt;, |)\n\nN.B. when testing logical conditions == is needed\n\n\n\ndf_lifetime %&gt;%\n  filter(trial == 1)\n\n# A tibble: 8 × 32\n  px    trial region region_n region_text          eye      ff    fp   rpd    tt\n  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 px3       1 filler        1 He owned innumerabl… RIGHT     0     0     0     0\n2 px5       1 filler        1 She is a mother of … RIGHT   145  1603  1603  1603\n3 px6       1 filler        1 He is a father of t… RIGHT   147  1224  1224  1224\n4 px2       1 filler        1 She made innumerabl… RIGHT    84  1829  1829  1829\n5 px7       1 filler        1 In the '70s, he own… RIGHT   138  2456  2456  2456\n6 px1       1 filler        1 Beloved morning sho… RIGHT   160  1708  1708  1708\n7 px8       1 filler        1 She was a mother of… RIGHT   220   806   806   806\n8 px4       1 filler        1 In the '70s, he own… LEFT    171  3557  3557  3557\n# ℹ 22 more variables: fix_count &lt;dbl&gt;, reg_in &lt;dbl&gt;, reg_in_count &lt;dbl&gt;,\n#   reg_out &lt;dbl&gt;, reg_out_count &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;, critical &lt;chr&gt;,\n#   gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;, condition &lt;chr&gt;,\n#   name &lt;chr&gt;, lifetime &lt;chr&gt;, tense &lt;chr&gt;, type &lt;chr&gt;, yes_press &lt;dbl&gt;,\n#   KeyPress &lt;dbl&gt;, accept &lt;dbl&gt;, accuracy &lt;dbl&gt;, px_accuracy &lt;dbl&gt;"
  },
  {
    "objectID": "wrangling.html#filter-1",
    "href": "wrangling.html#filter-1",
    "title": "4  Data wrangling",
    "section": "8.7 filter()",
    "text": "8.7 filter()\nWhat are these code chunks doing?\n\n\n\ndf_lifetime %&gt;%\n  filter(px_accuracy &gt; .5)\n\n\n\ndf_lifetime %&gt;%\n  filter(px == \"px3\")\n\n\n\n\n\n\ndf_lifetime %&gt;%\n  filter(px == \"px3\" | trial == \"3\")\n\n\n\ndf_lifetime %&gt;%\n  filter(px == \"px3\" & trial != \"3\")\n\n\n\n\n\n\n\n\n\n\n\nLogical operators\n\n\n\n\nsymbols used to describe a logical condition\n== is idential (1 == 1)\n!= is not identical (1 != 2)\n&gt; is greater than (2 &gt; 1)\n&lt; is less than (1 &lt; 2)\n& and also (for multiple conditions)\n| or (for multiple conditions)\n\n\n\n\n\n8.7.1 Exercise\n\nCreate a new dataframe df_crit that includes only critical trials\nCreate a new dataframe df_fill that includes only filler trials\n\n\nTip: trial type is stored in the column type\n\n\n\ndf_crit |&gt; select(type) |&gt; head()\n\n# A tibble: 6 × 1\n  type    \n  &lt;chr&gt;   \n1 critical\n2 critical\n3 critical\n4 critical\n5 critical\n6 critical\n\n\n\n\n\ndf_fill |&gt; select(type) |&gt; head()\n\n# A tibble: 6 × 1\n  type  \n  &lt;chr&gt; \n1 filler\n2 filler\n3 filler\n4 filler\n5 filler\n6 filler"
  },
  {
    "objectID": "wrangling.html#distinct",
    "href": "wrangling.html#distinct",
    "title": "4  Data wrangling",
    "section": "8.8 distinct()",
    "text": "8.8 distinct()\n\n\n\nlike filter(), but for distinct values of a variable\n\n“select rows with distinct values for some row(s)”\n\n\n\n\ndf_crit %&gt;%\n  distinct(px)\n\n# A tibble: 8 × 1\n  px   \n  &lt;chr&gt;\n1 px3  \n2 px5  \n3 px6  \n4 px2  \n5 px7  \n6 px1  \n7 px8  \n8 px4  \n\n\n\n\ndf_crit %&gt;%\n  distinct(px, name)\n\n# A tibble: 639 × 2\n   px    name          \n   &lt;chr&gt; &lt;chr&gt;         \n 1 px3   Edith Piaf    \n 2 px3   Aaliyah       \n 3 px3   David Beckham \n 4 px3   Jana Novotna  \n 5 px3   Grace Kelly   \n 6 px3   Nigella Lawson\n 7 px3   Coco Chanel   \n 8 px3   Ben Kingsley  \n 9 px3   Jim Carrey    \n10 px3   Judy Garland  \n# ℹ 629 more rows\n\n\n\n\ndf_crit %&gt;%\n  distinct(px, name,\n           .keep_all=T)\n\n# A tibble: 639 × 32\n   px    trial region region_n region_text eye      ff    fp   rpd    tt\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 px3       3 verb-1        1 She         RIGHT     0     0     0     0\n 2 px3       5 verb-1        1 She         RIGHT     0     0     0     0\n 3 px3       8 verb-1        1 He          RIGHT     0     0     0     0\n 4 px3      10 verb-1        1 She         RIGHT     0     0     0     0\n 5 px3      13 verb-1        1 She         RIGHT     0     0     0     0\n 6 px3      16 verb-1        1 She         RIGHT     0     0     0     0\n 7 px3      18 verb-1        1 She         RIGHT     0     0     0     0\n 8 px3      21 verb-1        1 He          RIGHT     0     0     0     0\n 9 px3      23 verb-1        1 He          RIGHT     0     0     0     0\n10 px3      26 verb-1        1 She         RIGHT     0     0     0     0\n# ℹ 629 more rows\n# ℹ 22 more variables: fix_count &lt;dbl&gt;, reg_in &lt;dbl&gt;, reg_in_count &lt;dbl&gt;,\n#   reg_out &lt;dbl&gt;, reg_out_count &lt;dbl&gt;, rt &lt;dbl&gt;, bio &lt;chr&gt;, critical &lt;chr&gt;,\n#   gender &lt;chr&gt;, item_id &lt;dbl&gt;, list &lt;dbl&gt;, match &lt;chr&gt;, condition &lt;chr&gt;,\n#   name &lt;chr&gt;, lifetime &lt;chr&gt;, tense &lt;chr&gt;, type &lt;chr&gt;, yes_press &lt;dbl&gt;,\n#   KeyPress &lt;dbl&gt;, accept &lt;dbl&gt;, accuracy &lt;dbl&gt;, px_accuracy &lt;dbl&gt;"
  },
  {
    "objectID": "wrangling.html#arrange",
    "href": "wrangling.html#arrange",
    "title": "4  Data wrangling",
    "section": "8.9 arrange()",
    "text": "8.9 arrange()\n\n\n\nsort column(s) in ascending or descending order\n\nthis is really just for ease of reading\n\n\n\n\n# default: ascending order (A-Z)\ndf_crit %&gt;%\n  distinct(px, trial, name, condition) %&gt;%\n  arrange(px, trial)\n\n# A tibble: 639 × 4\n   px    trial name            condition\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;    \n 1 px1       3 Amy Winehouse   deadPP   \n 2 px1       5 John Wayne      deadPP   \n 3 px1       8 Abraham Lincoln deadPP   \n 4 px1      10 Helen Mirren    livingSF \n 5 px1      13 Paul McCartney  livingSF \n 6 px1      16 Ariana Grande   livingPP \n 7 px1      18 Kate Middleton  livingSF \n 8 px1      21 Johan Cruyff    deadSF   \n 9 px1      23 Marilyn Monroe  deadPP   \n10 px1      26 Biggie Smalls   deadSF   \n# ℹ 629 more rows\n\n\n\n\n# descending order (Z-A)\ndf_crit %&gt;%\n  distinct(px, trial, name, condition) %&gt;%\n  arrange(desc(px), trial)\n\n# A tibble: 639 × 4\n   px    trial name            condition\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;    \n 1 px8       3 Whitney Houston deadPP   \n 2 px8       5 Elton John      livingSF \n 3 px8       8 Jackie Chan     livingPP \n 4 px8      10 Romy Schneider  deadPP   \n 5 px8      13 James Cameron   livingSF \n 6 px8      16 Ella Fitzgerald deadSF   \n 7 px8      18 Kathryn Hepburn deadPP   \n 8 px8      21 Kate Middleton  livingPP \n 9 px8      23 Janis Joplin    deadPP   \n10 px8      26 Serena Williams livingSF \n# ℹ 629 more rows"
  },
  {
    "objectID": "wrangling.html#separate",
    "href": "wrangling.html#separate",
    "title": "4  Data wrangling",
    "section": "8.10 separate()",
    "text": "8.10 separate()\n\ncreate new columns from a single column\n\n\ndf_crit&lt;- df_crit %&gt;%\n  separate(name,\n           sep=\" \",\n           into = c(\"First\",\"Last\"),\n           remove = F, # don't remove original column (name)\n           extra = \"merge\") # if extra chunks, combine in 'Last' (von der...)\n\n\nopposite: unite()"
  },
  {
    "objectID": "wrangling.html#pivot_longer",
    "href": "wrangling.html#pivot_longer",
    "title": "4  Data wrangling",
    "section": "9.1 pivot_longer()",
    "text": "9.1 pivot_longer()\n\ntakes wide data and makes it longer\n\nconverts headers of columns into values of a new column\ncombines the values of those columns into a new condensed column\n\ntakes a few arguments:\n\ncols: which columns do we want to combine into a single column?\nnames_to: what should we call the new column containing the previous column names?\nvalues_to: what should we call the new column containing the values from the previous columns?"
  },
  {
    "objectID": "wrangling.html#pivot_longer-1",
    "href": "wrangling.html#pivot_longer-1",
    "title": "4  Data wrangling",
    "section": "pivot_longer()",
    "text": "pivot_longer()\n\ndf_lifetime %&gt;% \n  select(px,trial,region,ff,fp,rpd,tt,rt,type,accept,condition) %&gt;%\n  filter(type==\"critical\",region==\"verb\",px!=\"px3\") %&gt;%\n  pivot_longer(\n  cols = c(ff,fp,rpd,tt,rt), # columns to make long \n  names_to = \"measure\", # new column name for headers\n  values_to = \"time\" # new column name for values\n)\n\n# A tibble: 2,795 × 8\n   px    trial region type     accept condition measure  time\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;   &lt;dbl&gt;\n 1 px5       3 verb   critical      1 livingPP  ff        175\n 2 px5       3 verb   critical      1 livingPP  fp        175\n 3 px5       3 verb   critical      1 livingPP  rpd       175\n 4 px5       3 verb   critical      1 livingPP  tt        321\n 5 px5       3 verb   critical      1 livingPP  rt       4736\n 6 px5       5 verb   critical      1 livingPP  ff        207\n 7 px5       5 verb   critical      1 livingPP  fp        413\n 8 px5       5 verb   critical      1 livingPP  rpd       413\n 9 px5       5 verb   critical      1 livingPP  tt        413\n10 px5       5 verb   critical      1 livingPP  rt       4622\n# ℹ 2,785 more rows\n\n\n\nSource: PsyTeachR"
  },
  {
    "objectID": "wrangling.html#pivot_wider",
    "href": "wrangling.html#pivot_wider",
    "title": "4  Data wrangling",
    "section": "9.2 pivot_wider()",
    "text": "9.2 pivot_wider()\n\ntakes long data and makes it wider\ntakes a few arguments:\n\nid_cols: identifying columns\nnames_from: what should we call the new column containing the previous column names?\nnames_prefix:\nvalues_from: new column values"
  },
  {
    "objectID": "wrangling.html#pivot_wider-1",
    "href": "wrangling.html#pivot_wider-1",
    "title": "4  Data wrangling",
    "section": "pivot_wider()",
    "text": "pivot_wider()\n\ndf_lifetime %&gt;% \n  select(px,trial,region,ff,fp,rpd,tt,rt,type,accept,condition) %&gt;%\n  filter(type==\"critical\",px!=\"px3\") %&gt;%\n  pivot_wider(\n  id_cols = c(px,trial), # columns to make long \n  names_from = region, # new column name for headers\n  names_prefix = \"reg_\", # new column name for values\n  values_from = tt\n)\n\n# A tibble: 559 × 8\n   px    trial `reg_verb-1` reg_verb `reg_verb+1` `reg_verb+2` `reg_verb+3`\n   &lt;chr&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n 1 px5       3          190      321         1723          672          575\n 2 px5       5            0      413          476          279         2441\n 3 px5       8          246     1892          967          450          981\n 4 px5      10            0      601          932          243          702\n 5 px5      13            0      407         1115            0            0\n 6 px5      16            0     1010         1502          337         1426\n 7 px5      18          238      389         1415          359          584\n 8 px5      21            0      376          584          475         2015\n 9 px5      23          231      215          717          184          255\n10 px5      26          125      347          400          317          981\n# ℹ 549 more rows\n# ℹ 1 more variable: `reg_verb+4` &lt;dbl&gt;\n\n\n\nSource: PsyTeachR"
  },
  {
    "objectID": "wrangling.html#important-terms",
    "href": "wrangling.html#important-terms",
    "title": "4  Data wrangling",
    "section": "Important terms",
    "text": "Important terms\n\n\n\n\n\n\n\nwrangle\nhave a long dispute\n\n\ndata wrangling\ntidying and transforming your data\n\n\ntidy data\ndata where each column is a variable and each row is an observation\n\n\nthe tidyverse\na group of packages for tidy data\n\n\ndplyr\na package within the tidyverse for data wrangling\n\n\npipe operator (%&gt;% or |&gt;)\noperational function, passes the result of one function/argument to the next\n\n\nlogical operators\ncompare values of two arguments: &, |, ==, !=, &gt;, &lt;"
  },
  {
    "objectID": "wrangling.html#important-functions",
    "href": "wrangling.html#important-functions",
    "title": "4  Data wrangling",
    "section": "Important functions",
    "text": "Important functions\n\n\n\n\n\n\n\nread_csv()\nread-in a csv as a tibble (from readr package)\n\n\nrename()\nrename variables\n\n\nrelocate()\nmove variables\n\n\nmutate()\nchange or create new variables\n\n\nif_else()\ncondition for `mutate()`\n\n\ncase_when()\nhandle multiple conditions for `mutate()`\n\n\ngroup_by()\ngroup by a certain variable\n\n\nselect()\nkeep (or exclude) certain variables\n\n\nfilter()\nkeep (or exclude) rows based on some criteria\n\n\ndistinct()\nkeep rows with distinct value of given variable(s)\n\n\narrange()\nsort variable(s) in ascending or descending order\n\n\nseparate()\nsplit a variable into multiple variables\n\n\npivot_longer()\nmake wide data longer\n\n\npivot_wider()\nmake long data wider"
  },
  {
    "objectID": "data_viz.html",
    "href": "data_viz.html",
    "title": "5  Data Visualisation with ggplot2",
    "section": "",
    "text": "6 Data communication\niris |&gt; \n  ggplot(aes(x=Sepal.Length)) +\n  geom_histogram() +\n  labs(title = \"A histogram\",\n       x = \"variable\")\niris |&gt; \n  ggplot(aes(x=Sepal.Length)) +\n  geom_density() +\n  labs(title = \"A density plot\",\n       x = \"variable\")\nNordmann et al. (2022)\nNordmann & DeBruine (2022)\nWickham et al. (n.d.), Chapter 2"
  },
  {
    "objectID": "data_viz.html#load-packages-and-data",
    "href": "data_viz.html#load-packages-and-data",
    "title": "5  Data Visualisation with ggplot2",
    "section": "6.1 Load packages and data",
    "text": "6.1 Load packages and data\n\n# load tidyverse\nlibrary(tidyverse)\n\n# load data\ndf_lifetime &lt;- readr::read_csv(here::here(\"data/tidy_data_lifetime_pilot.csv\"), \n                               # for special characters\n                               locale = readr::locale(encoding = \"latin1\") \n                               ) |&gt;\n  mutate_if(is.character,as.factor) |&gt; # all character variables as factor\n  filter(type == \"critical\", # only critical trials\n         px != \"px3\") # this participant had lots of 0's for some reason"
  },
  {
    "objectID": "data_viz.html#tables",
    "href": "data_viz.html#tables",
    "title": "5  Data Visualisation with ggplot2",
    "section": "6.2 Tables",
    "text": "6.2 Tables\n\nwe can create summaries of our data\n\n\n\nCode\n# compute summary \nsummary_ff &lt;- df_lifetime |&gt; \n  filter(region==\"verb\") |&gt; \n  group_by(condition,lifetime,tense) %&gt;%\n  summarise(N = n(),\n            mean.ff = mean(ff, na.rm = T),\n            sd = sd(ff, na.rm = T)) %&gt;%\n  # compute standard error, confidence intervals, and lower/upper ci bounds\n  mutate(se = sd / sqrt(N),\n         ci = qt(1 - (0.05 / 2), N - 1) * se,\n         lower.ci = mean.ff - qt(1 - (0.05 / 2), N - 1) * se,\n         upper.ci = mean.ff + qt(1 - (0.05 / 2), N - 1) * se)\n\n\n\nand print the output with the kable() function from the knitr package\n\nfor extra customisation you can also use the kableExtra package (e.g., with the kable_styling() function)\n\n\n\n# install.packages(\"knitr\") # if not yet installed\nknitr::kable(summary_ff, digits=1,\n             caption = \"Table with summmary statistics for first-fixation duration at the verb region\")\n\n\nTable with summmary statistics for first-fixation duration at the verb region\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncondition\nlifetime\ntense\nN\nmean.ff\nsd\nse\nci\nlower.ci\nupper.ci\n\n\n\n\ndeadPP\ndead\nPP\n140\n198.9\n57.9\n4.9\n9.7\n189.2\n208.6\n\n\ndeadSF\ndead\nSF\n139\n194.6\n67.9\n5.8\n11.4\n183.2\n205.9\n\n\nlivingPP\nliving\nPP\n140\n194.2\n77.3\n6.5\n12.9\n181.3\n207.1\n\n\nlivingSF\nliving\nSF\n140\n186.0\n57.6\n4.9\n9.6\n176.4\n195.6\n\n\n\n\n\n\n6.2.1 Exercise\n\ninstall the knitr package (install.packages(\"knitr\"))\ncreate an object with some summary statistics of the variable rt\n\n\ncall it summary_rt\n\n\nuse kable() from knitr to print a table\n\n\nknitr::kable(summary_rt, digits=1,\n             caption = \"Summary of reaction times (ms) per condition\")\n\n\nSummary of reaction times (ms) per condition\n\n\nlifetime\ntense\ncondition\nN\nmean.rt\nsd\n\n\n\n\ndead\nPP\ndeadPP\n140\n3530.5\n2915.8\n\n\ndead\nSF\ndeadSF\n139\n1747.0\n1153.4\n\n\nliving\nPP\nlivingPP\n140\n2257.7\n1346.3\n\n\nliving\nSF\nlivingSF\n140\n2578.1\n1958.7"
  },
  {
    "objectID": "data_viz.html#start-layering",
    "href": "data_viz.html#start-layering",
    "title": "5  Data Visualisation with ggplot2",
    "section": "9.1 Start layering",
    "text": "9.1 Start layering\n\ndf_lifetime |&gt; ggplot(aes(ff)) # aes = 'aesthetic'"
  },
  {
    "objectID": "data_viz.html#add-labels",
    "href": "data_viz.html#add-labels",
    "title": "5  Data Visualisation with ggplot2",
    "section": "9.2 Add labels",
    "text": "9.2 Add labels\n\ndf_lifetime |&gt; ggplot(aes(ff)) + \n  labs(title = \"Histogram of first fixation times\",\n       x = \"First fixation times (ms)\")"
  },
  {
    "objectID": "data_viz.html#add",
    "href": "data_viz.html#add",
    "title": "5  Data Visualisation with ggplot2",
    "section": "9.3 Add",
    "text": "9.3 Add\n\ndf_lifetime |&gt; ggplot(aes(ff)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_histogram()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds)"
  },
  {
    "objectID": "data_viz.html#add-condition",
    "href": "data_viz.html#add-condition",
    "title": "5  Data Visualisation with ggplot2",
    "section": "9.4 Add condition",
    "text": "9.4 Add condition\n\ndf_lifetime |&gt; ggplot(aes(ff, fill = condition)) + \n  labs(title = \"First fixataion times at the verb region\",\n       x = \"First fixation times (ms)\") +\n  geom_histogram()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds)\n\n\n\n\n\nThe colour here is STACKED!! i.e., not layered. Notice the distribution doesn’t change from all grey to coloured"
  },
  {
    "objectID": "data_viz.html#customisation",
    "href": "data_viz.html#customisation",
    "title": "5  Data Visualisation with ggplot2",
    "section": "9.5 Customisation",
    "text": "9.5 Customisation\n\nwe can add arguments to our geoms\n\ne.g., transparency: alpha = takes a value between 0 to 1\n\nwe can use theme() to customise font sizes, legend placement, etc.\ntehre are also popular preset themes, such as theme_bw() and theme_minimal()\n\n\ntheme_bw()theme_minimal()\n\n\n\ndf_lifetime |&gt; ggplot(aes(ff, fill = condition)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_histogram(alpha=.5) +\n  theme_bw()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds).\n\n\n\n\n\n\n\ndf_lifetime |&gt; ggplot(aes(ff, fill = condition)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_histogram(alpha=.5) +\n  theme_minimal()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds)."
  },
  {
    "objectID": "data_viz.html#density-plots",
    "href": "data_viz.html#density-plots",
    "title": "5  Data Visualisation with ggplot2",
    "section": "10.1 Density plots",
    "text": "10.1 Density plots\n\nbelow I just replaced geom_histogram() with geom_density()\n\nI also filtered the data to include only values of ff above 0\n\nwhat is plotted along the y-axis? how does this differ from a histogram?\n\n\ndf_lifetime |&gt; \n  filter(ff &gt; 0) |&gt; \n  ggplot(aes(ff)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_density() +\n  theme_minimal()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds)."
  },
  {
    "objectID": "data_viz.html#grouped-density-plots",
    "href": "data_viz.html#grouped-density-plots",
    "title": "5  Data Visualisation with ggplot2",
    "section": "10.2 Grouped density plots",
    "text": "10.2 Grouped density plots\n\njust like with histograms, we can look at the density plots of different subsets of the data with aes(fill = )\n\nlike region\n\n\n\ndf_lifetime |&gt; \n  filter(ff &gt; 0) |&gt; \n  ggplot(aes(ff, fill = region)) + \n  labs(title = \"Histogram of first fixataion times\",\n       x = \"First fixation times (ms)\") +\n  geom_density(alpha=.5) +\n  theme_minimal()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds).\n\n\n\n\n\n10.2.1 facet_grid()\n\nthere are a lot of overlapping density curves, let’s try to separate them with facet_grid(x~y)\n\n\ndf_lifetime |&gt; \n  filter(ff &gt; 0) |&gt; \n  ggplot(aes(ff, fill = region)) + \n  facet_grid(.~region) +\n  labs(title = \"Density plot of first fixataion times by region\",\n       x = \"First fixation times (ms)\") +\n  geom_density(alpha=.5) +\n  theme_bw()\n\n\n\n\nDistribution of first fixation times at the verb region (raw milliseconds).\n\n\n\n\n\nhow would you describe the density plots of the different regions?\n\n\n\n10.2.2 re-ordering factors\n\nby default, factors will be ordered alphabetically\n\nbut we don’t always want that\nhere, verb-1 should be before verb\n\n\n\ndf_lifetime &lt;- df_lifetime %&gt;%\n  mutate(region = factor(region, \n                         levels = c(\"verb-1\",\"verb\",\"verb+1\",\"verb+2\",\"verb+3\",\"verb+4\")))\n\nsummary(df_lifetime$region)\n\nverb-1   verb verb+1 verb+2 verb+3 verb+4 \n   559    559    559    559    559    182 \n\n\n\n10.2.2.1 Exercise\n\ncreate a density plot with the fill colour set to condition, but:\n\n\nsubset the data to only include the verb region\nyou can decide if you want to use facets or to have the density curves overlayed\nyour plot should look something like A or B:\n\n\n\n\n\n\n\n\n10.2.2.2 Extra exercise\n\nCan you produce these plots?"
  },
  {
    "objectID": "data_viz.html#scatterplots",
    "href": "data_viz.html#scatterplots",
    "title": "5  Data Visualisation with ggplot2",
    "section": "10.3 Scatterplots",
    "text": "10.3 Scatterplots\n\nhistograms and density plots plot a single variable along the x-axis\n\nin most other plots the dependent (measure) variable is plotted along the y-axis by convention\n\nscatterplots plot the relationship between two variables\n\n\niris |&gt; \n  ggplot(aes(x=Sepal.Length, y=Sepal.Width)) +\n  geom_point() +\n  labs(title = \"A scatterplot\",\n       x = \"variable X\",\n       y = \"variable Y\")\n\n\n\n\n\n10.3.1 Scatterplots\n\nthe figure below plots total reading times (verb region) to the verb region (x-axis) and reaction times to the critical sentence (y-axis)\n\nwhat does each point represent?\nhow would you describe the relationship between the two variables?\n\n\n\ndf_lifetime |&gt;\n  filter(ff &gt; 0,\n         region == \"verb\") |&gt;\n  ggplot(aes(x = tt, y = rt)) +\n  labs(title = \"Scatter plot of total reading times (verb region)\nand reaction times (critical sentence)\",\n       x = \"Total reading time (ms)\",\n       y = \"Reaction time (ms)\") +\n  geom_point(alpha = .2) +\n  theme_bw()\n\n\n\n\n\n10.3.1.1 Exercise\n\nGenerate a scatterplot of total reading times and reaction times, with:\n\ncolour and shape set to condition\ntip: these both belong in aes()\n\nWhat information does this plot suggest?"
  },
  {
    "objectID": "data_viz.html#boxplots",
    "href": "data_viz.html#boxplots",
    "title": "5  Data Visualisation with ggplot2",
    "section": "11.1 Boxplots",
    "text": "11.1 Boxplots\n\nboxplots provide information about the distribution of a continuous variable\n\nbut includes information like median (dark line) and quartiles (box and whiskers)\nand outliers (dots)\n\nlike scatterplots, require x and y variables\n\nbut one of them needs to be categorical\n\n\n\niris |&gt; \n  ggplot(aes(x = Species, y = Sepal.Length)) +\n  labs(title = \"A scatterplot\",\n       x = \"Categorical variable\",\n       y = \"Continuous variable\") +\n  geom_boxplot()\n\n\n\n\nA scatterplot. Median (50th percentile): thick black lines; interquartile range (IQR; 25th and 75th percentile): box limits; minimum (0th percentile) and maximum (100th percentile) excluding outliers: : whiskers; outliers: points"
  },
  {
    "objectID": "data_viz.html#boxplot-explained",
    "href": "data_viz.html#boxplot-explained",
    "title": "5  Data Visualisation with ggplot2",
    "section": "11.2 Boxplot explained",
    "text": "11.2 Boxplot explained\n\n\n\n\n\nImage source: (winter_statistics_2019?) (all rights reserved)"
  },
  {
    "objectID": "data_viz.html#boxplots-1",
    "href": "data_viz.html#boxplots-1",
    "title": "5  Data Visualisation with ggplot2",
    "section": "11.3 Boxplots",
    "text": "11.3 Boxplots\n\nlet’s change our scatterplot to a boxplot\n\n\ndf_lifetime |&gt;\n  filter(ff &gt; 0,\n         region == \"verb\") |&gt;\n  ggplot(aes(x = tense, y = ff)) +\n  labs(title = \"First-fixation duration (verb region)\",\n       x = \"Tense\",\n       y = \"First-fixation duration (ms)\") +\n  geom_boxplot(alpha = .2) +\n  theme_bw()\n\n\n\n\n\n11.3.1 Grouped boxplots\n\ndf_lifetime |&gt;\n  filter(ff &gt; 0,\n         region == \"verb\") |&gt;\n  ggplot(aes(x = tense, y = ff, colour = lifetime)) +\n  labs(title = \"First-fixation duration (verb region)\",\n       x = \"Tense\",\n       y = \"First-fixation duration (ms)\") +\n  geom_boxplot(alpha = .2) +\n  theme_bw()\n\n\n\n\n\n11.3.1.1 Exercise\n\nCreate a group boxplot (x = tense, fill = lifetime) for\n\n\nfirst-pass reading time (verb region)\nregression path duration (verb region)\ntotal reading time (verb region)\nreaction times (use the distinct() verb to have a single observation per participant and per trial)"
  },
  {
    "objectID": "data_viz.html#violin-plots",
    "href": "data_viz.html#violin-plots",
    "title": "5  Data Visualisation with ggplot2",
    "section": "11.4 Violin plots",
    "text": "11.4 Violin plots"
  },
  {
    "objectID": "data_viz.html#violin-boxplots",
    "href": "data_viz.html#violin-boxplots",
    "title": "5  Data Visualisation with ggplot2",
    "section": "11.5 Violin boxplots",
    "text": "11.5 Violin boxplots"
  },
  {
    "objectID": "data_viz.html#interaction-plots",
    "href": "data_viz.html#interaction-plots",
    "title": "5  Data Visualisation with ggplot2",
    "section": "12.1 Interaction plots",
    "text": "12.1 Interaction plots\n\n\n\ncommon for factorial designs, i.e., comparing categorical predictors\nthere are 2 ways of producing them:\n\nwith your data frame and stat_summary()\nor with a summary table and ggplot geoms geom_point(), geom_errorbar(), and geom_line()\n\nwe’ll need our summary table to plot an interaction plot\n\n\n\n\n\n\n\ncondition\nlifetime\ntense\nN\nmean.ff\nsd\nse\nci\nlower.ci\nupper.ci\n\n\n\n\ndeadPP\ndead\nPP\n140\n198.9\n57.9\n4.9\n9.7\n189.2\n208.6\n\n\ndeadSF\ndead\nSF\n139\n194.6\n67.9\n5.8\n11.4\n183.2\n205.9\n\n\nlivingPP\nliving\nPP\n140\n194.2\n77.3\n6.5\n12.9\n181.3\n207.1\n\n\nlivingSF\nliving\nSF\n140\n186.0\n57.6\n4.9\n9.6\n176.4\n195.6"
  },
  {
    "objectID": "data_viz.html#bar-plot",
    "href": "data_viz.html#bar-plot",
    "title": "5  Data Visualisation with ggplot2",
    "section": "13.1 Bar plot",
    "text": "13.1 Bar plot\n\n\nbe sure to read in accept as a factor!\n\n\n\n\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = as.factor(accept) )) +\n  geom_bar() +\n  theme_bw()\n\n\n\n\n\n\n\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = as.factor(accept), fill = condition)) +\n  labs(title = \"Binary responses\",\n       x = \"Naturalness response\",\n       fill = \"Condition\") +\n  geom_bar() +\n  theme_bw()"
  },
  {
    "objectID": "data_viz.html#grouped-bar-plots",
    "href": "data_viz.html#grouped-bar-plots",
    "title": "5  Data Visualisation with ggplot2",
    "section": "13.2 Grouped bar plots",
    "text": "13.2 Grouped bar plots\n\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = as.factor(accept), fill = condition)) +\n  labs(title = \"Binary responses\",\n       x = \"Naturalness response\",\n       fill = \"Condition\") +\n  geom_bar(position = \"dodge\") +\n  theme_bw()\n\n\n\n\n\n13.2.1 Exercise\n\nGenerate a grouped bar plot (i.e., dodge) with:\n\na facet grid for tense\nplots lifetime on the x-axis\nand fills the bars based on accept\nchange the labels accordingly\ncustomise as you like\n\n\n\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = lifetime, fill = as.factor(accept))) +\n  facet_grid(.~tense) +\n  labs(title = \"Binary responses\",\n       x = \"Lifetime\",\n       fill = \"Response\") +\n  geom_bar(position = \"dodge\") +\n  theme_bw()"
  },
  {
    "objectID": "data_viz.html#grouped-bar-plots-1",
    "href": "data_viz.html#grouped-bar-plots-1",
    "title": "5  Data Visualisation with ggplot2",
    "section": "13.3 Grouped bar plots",
    "text": "13.3 Grouped bar plots\n\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = lifetime, fill = as.factor(accept))) +\n  facet_grid(.~tense) +\n  labs(title = \"Grouped and faceted barplot\",\n       x = \"Lifetime\",\n       fill = \"Response\") +\n  geom_bar(position = \"dodge\") +\n  theme_bw()"
  },
  {
    "objectID": "data_viz.html#stacked-bar-plots",
    "href": "data_viz.html#stacked-bar-plots",
    "title": "5  Data Visualisation with ggplot2",
    "section": "13.4 Stacked bar plots",
    "text": "13.4 Stacked bar plots\n\ndf_lifetime |&gt; \n  distinct(px,trial,.keep_all=T) |&gt; \n  ggplot(aes(x = lifetime, fill = as.factor(accept))) +\n  facet_grid(.~tense) +\n  labs(title = \"Stacked and faceted barplot\",\n       x = \"Lifetime\",\n       fill = \"Response\") +\n  geom_bar(position = \"stack\") +\n  theme_bw()\n\n\n\n\n\n13.4.1 Exercise\n\nChoose the barplot you like best for binary data\nReproduce that barplot, but with reg_in at the verb1 region\n\n\n\n\n\n\n\n\n13.4.2 Extra exercise\n\nCreate another bar plot, but for reg_out for all sentence regions\nUse facet_grid()\n\n\nto have facets by region (columns) and by tense (in 2 rows)"
  }
]